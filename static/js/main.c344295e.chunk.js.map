{"version":3,"sources":["utils.js","config/defaultConfig.js","config/colorThemes.js","config/configHandler.js","notifications.js","controls/inputs/Checkbox.js","controls/inputs/Select.js","grid/Cell.js","gridsHandler.js","controls/modals/ResetGridModal.js","controls/modals/ImportGridModal.js","controls/modals/DownloadGridModal.js","media/icon-folder-open.svg","media/icon-cross.svg","media/icon-link.svg","controls/modals/ManageGridsModal.js","controls/modals/SaveGridModal.js","media/icon-right-arrow.svg","media/icon-bars.svg","controls/Controls.js","Mouse.js","media/icon-github.svg","media/icon-facebook.svg","media/icon-twitter.svg","controls/modals/AboutModal.js","Footer.js","grid/TextCell.js","grid/Layer.js","controls/modals/TextModal.js","tools/TextTool.js","tools/PatchTool.js","tools/BackstitchTool.js","Panning.js","brushesHandler.js","App.js","serviceWorker.js","index.js"],"names":["wrapperWidth","wrapperHeight","colSize","rowSize","defaultConfig","bodyPaddingX","bodyPaddingY","colorTheme","isControlsOpen","isOptionsOpen","showGridlines","downloadFormat","cellSize","borderSizesList","customColor","borderSize","modalStyle","overlay","backgroundColor","zIndex","content","position","width","background","overflow","WebkitOverflowScrolling","outline","padding","showText","textSize","textColor","activeGrid","layers","lgrid","lfloor","lfloorm","lwallv","lwallvm","lnotes","text","lgrid-text","lfloor-text","lfloorm-text","lwallv-text","lwallvm-text","lnotes-text","lgrid-eraser","lgrid-g1","lgrid-g2","lgrid-g3","lgrid-g4","lgrid-g5","lgrid-g6","lgrid-g7","lgrid-g8","lgrid-g9","lgrid-g10","lfloor-eraser","lfloor-f1","lfloor-f2","lfloor-f3","lfloor-f4","lfloor-f5","lfloor-f6","lfloor-f7","lfloor-f8","lfloor-f9","lfloor-f10","lfloor-f11","lfloor-f12","lfloor-f13","lfloorm-eraser","lfloorm-fm1","lfloorm-fm2","lfloorm-fm3","lfloorm-fm4","lfloorm-fm5","lfloorm-fm6","lfloorm-fm7","lfloorm-fm8","lfloorm-fm9","lfloorm-fm10","lfloorm-fm11","lfloorm-fm12","lfloorm-fm13","lfloorm-fm14","lfloorm-fm15","lfloorm-fm16","lwallv-eraser","lwallv-w1v","lwallv-w2v","lwallv-w3v","lwallv-w4v","lwallv-w5v","lwallv-w6v","lwallv-w7v","lwallvm-eraser","lwallvm-wm1v","lwallvm-wm2v","lwallvm-wm3v","lwallvm-wm4v","lwallvm-wm5v","lwallvm-wm6v","lwallvm-wm7v","lwallvm-wm8v","lwallvm-wm9v","lnotes-eraser","lnotes-ln3","symbols","selected","color","react_default","a","createElement","key","id","viewBox","x","y","height","fill","g1","g2","g3","g4","g5","g6","g7","g8","g9","g10","concat","r","g","b","fillOpacity","f1","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","f2","f3","patternUnits","d","style","f4","f5","f6","f7","f8","transform","f9","f10","f11","f12","f13","fm1","fm2","points","fm3","fm4","fm5","fm6","fm7","fm8","fm9","fm10","fm11","fm12","fm13","strokeDasharray","fm14","rx","ry","fm15","strokeMiterlimit","fm16","w1v","w2v","vectorEffect","w3v","w4v","w5v","w6v","w7v","wm1v","wm2v","wm3v","wm4v","wm5v","wm6v","wm7v","wm8v","wm9v","ln3","font","colorThemes","default (dark)","deadCell","aliveCell","cellText","cellGraphText","footerText","controlsBackground","optionsMenuBackground","buttonHoverBackground","controlsText","controlsBorder","default (light)","configHandler","save","configToSave","savedConfig","localStorage","getItem","newConfig","JSON","parse","Object","assign","setItem","stringify","get","objectSpread","getModalStyle","theme","borderColor","configData","config","windowWidth","window","innerWidth","windowHeight","innerHeight","getMinRow","array","reduce","min","Math","row","getMinCol","col","getMaxRow","max","getMaxCol","notif","utils","initGridData","isResize","floor","gridHasCells","newCellSize","newRoundedCol","newRoundedRow","adaptGridSizeToGridSize","gridSize","newWrapperHeight","newGridSize","gridTooBigWithSmallestCellSize","createGrid","grid","keys","i","length","findCellIndex","layer","findIndex","el","createShowLayers","showLayers","formatDigits","totalCellsNumber","toString","replace","getWrapperWidth","getWrapperHeight","getColSize","getGridSize","getSelectList","acc","push","getPointerType","eventType","getDeviceType","test","navigator","userAgent","getSVGString","svgNode","setAttribute","cssText","element","styleElement","document","innerHTML","refNode","hasChildNodes","children","insertBefore","appendCSS","parentElement","selectorTextArr","c","classList","contains","nodes","getElementsByTagName","classes","extractedCSSText","styleSheets","s","cssRules","e","name","selectorText","str","arr","indexOf","getCSSStyles","svgString","XMLSerializer","serializeToString","svgString2Image","callback","imgsrc","btoa","unescape","encodeURIComponent","canvas","context","getContext","image","Image","onload","clearRect","drawImage","toBlob","blob","src","getMinCoords","minPerLayer","filter","layerName","map","getMaxCoords","maxPerLayer","Checkbox","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","event","className","type","onChange","disabled","isDisabled","checked","isChecked","htmlFor","title","label","Component","Select","value","defaultValue","options","index","Cell","_this$props","xPos","yPos","size","undefined","halfSize","x0","y0","center","data-index","href","top","transformOrigin","bottom","left","right","diag1","diag2","PureComponent","gridsHandler","saveUserGrid","userGrids","getUserGrids","newUserGrids","exportString","encodeGridExportString","importUserGrid","gridData","gridExportString","decodeGridExportString","decodeURIComponent","escape","atob","loadUserGrid","deleteUserGrid","removeItem","doesImportGridAlreadyExist","getUserGridsNames","userGridsNames","unshift","ResetGridModal","handleShowModal","resetGrid","preventDefault","lib_default","isOpen","showModal","contentLabel","onRequestClose","base","afterOpen","beforeClose","onSubmit","onClick","SaveGridModal","importGrid","gridImportInput","_this2","placeholder","ref","input","DownloadGridModal","state","filename","downloadGrid","handleFormatChange","handleFilenameChange","gridDownloadInput","format","target","setState","prevState","displayNotification","addNotification","message","level","autoDismiss","action","notifications","init","notificationSystem","clearAll","clearNotifications","cellSizeChanged","gridLoadedAndSaved","cellSizeTooBig","cantSaveBrush","brushSuccessfullyLoaded","brushLinkCopied","brushLinkNotCopied","error","wrongBrushExportString","brushAlreadyExists","brushName","brushSuccessfullyImported","gridSuccessfullyLoaded","gridLinkCopied","gridLinkNotCopied","wrongGridExportString","gridAlreadyExists","gridName","gridSuccessfullyImported","_extends","arguments","source","prototype","hasOwnProperty","apply","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","icon_folder_open_SvgIconFolderOpen","_ref","svgRef","ForwardRef","forwardRef","__webpack_require__","p","icon_cross_extends","icon_cross_objectWithoutProperties","icon_cross_objectWithoutPropertiesLoose","icon_cross_ref2","icon_cross_SvgIconCross","icon_cross_ForwardRef","icon_link_extends","icon_link_objectWithoutProperties","icon_link_objectWithoutPropertiesLoose","icon_link_ref2","icon_link_SvgIconLink","icon_link_ForwardRef","ManageGridsModal","displayLinkToCopy","deleteGrid","loadGrid","copyGridExportString","inputLink","select","execCommand","_this3","gridsNames","alt","readOnly","saveGrid","selectLink","handleNameChange","gridNameInput","gridNameLink","setSelectionRange","maxLength","icon_right_arrow_extends","icon_right_arrow_objectWithoutProperties","icon_right_arrow_objectWithoutPropertiesLoose","icon_right_arrow_ref2","icon_right_arrow_SvgIconRightArrow","icon_right_arrow_ForwardRef","icon_bars_extends","icon_bars_objectWithoutProperties","icon_bars_objectWithoutPropertiesLoose","icon_bars_ref2","icon_bars_SvgIconBars","icon_bars_ForwardRef","themesList","borderSizeList","Controls","isSketchPickerOpen","displayColorPicker","resetGridModalOpen","importGridModalOpen","downloadGridModalOpen","manageGridsModalOpen","saveGridModalOpen","headerHeight","ReactModal","setAppElement","resizeTimer","toggleControls","toggleOptions","switchShowGridlines","changeTimeCompression","changeColorTheme","handleGridChange","handleManageGridsModal","handleImportGridModal","getMenuMaxHeight","onResize","changeBorderSize","handleResetGridModal","handleDownloadGridModal","toggleColorPicker","handleCustomColorChange","handleSaveGridModal","handleClickOutside","handleBrushChange","newSize","parseInt","loadGridFromDb","switchShowLayer","confirm","isNoGridLeft","isActiveStateGrid","headerGeometry","header","getBoundingClientRect","clearTimeout","setTimeout","addEventListener","passive","removeEventListener","colorPicker","ReactDOM","findDOMNode","tool","changeBrush","isOptionsMenuOpenClass","userGridSelectLabel","exampleGridSelectLabel","gridTitle","scoped","currentLayer","currentBrush","cursor","display","Checkbox_Checkbox","Select_Select","Array","isArray","gridsLibraryNames","ResetGridModal_ResetGridModal","SaveGridModal_SaveGridModal","ImportGridModal_SaveGridModal","modals_DownloadGridModal","modals_ManageGridsModal","data-layer","opacity","role","handleClose","react_color_lib","disableAlpha","version","baseProfile","xmlns","grid_Cell","Mouse","NO_BUTTON","LEFT_BUTTON","MIDDLE_BUTTON","RIGHT_BUTTON","icon_github_extends","icon_github_objectWithoutProperties","icon_github_objectWithoutPropertiesLoose","icon_github_ref2","icon_github_SvgIconGithub","icon_github_ForwardRef","icon_facebook_extends","icon_facebook_objectWithoutProperties","icon_facebook_objectWithoutPropertiesLoose","icon_facebook_ref2","icon_facebook_SvgIconFacebook","icon_facebook_ForwardRef","icon_twitter_extends","icon_twitter_objectWithoutProperties","icon_twitter_objectWithoutPropertiesLoose","icon_twitter_ref2","icon_twitter_SvgIconTwitter","icon_twitter_ForwardRef","AboutModal","rel","twitterLink","pckg","description","url","Footer","isAboutModalOpen","handleAboutModal","AboutModal_AboutModal","author","license","TextCell","handleMouseOver","tooltip","getElementById","childNodes","visibility","show","rotation","split","dy","onMouseOver","onMouseOut","handleMouseOut","Layer","cells","shiftCoord","cell","grid_TextCell","TextModal","textRotation","submit","handleValueChange","handleSizeChange","handleColorChange","handleRotationChange","handleShowChange","onShowTextModal","getTextValue","getTextShow","getTextSize","getTextColor","getTextRotation","rgb","currentContent","_this4","getTextColorInHexa","getTextColorAlpha","TextTool","textModalOpen","handleFormSubmit","handleShowTextModal","buttonPressedCode","onCoordChange","removeCell","cellIndex","updateCellContent","TextModal_TextModal","PatchTool","mousemove","updateDisplayCellContent","PixelPosition","TOP_LEFT","BOTTOM_LEFT","TOP_RIGHT","BOTTOM_RIGHT","getDist","point0","point1","sqrt","pow","getDistX","abs","getDistY","getPositionInCell","point","half","BackstitchTool","pos","len","diagLen","getPosition","defineProperty","neighborPos","neighborRow","neighborCol","Panning","startCoord","startShiftCoord","pageX","pageY","isPanning","brushesHandler","saveCustomBrush","customBrushes","getCustomBrushes","newCustomBrushes","brushData","getBrushLifeMapAndSize","indexChanged","brushSize","lifeMap","encodeBrushExportString","importCustomBrush","brushExportString","decodeBrushExportString","loadCustomBrush","deleteCustomBrush","doesImportBrushAlreadyExist","brush","getCustomBrushesNames","customBrushesNames","generateSeed","colLength","rowLength","forEach","widthStart","widthEnd","heightStart","heightEnd","gridMap","activeGridRow","widthStartSetForActualRow","j","brushWidth","brushHeight","widthDiff","brushlifeMap","newIndex","gridsLibrary","App","randomSeed","displayGrid","startPanCoord","startPanDisplacement","pixelRatio","devicePixelRatio","currentIndexChanged","tools","changeCellSize","importBrush","loadBrushFromDb","handleMouseActions","handleZoom","handleMouseLeave","handlePanningChange","handleCoordChange","newColorTheme","newState","newBorderSize","FileSaver","saveAs","Blob","svg","characterSet","getAttribute","isAlreadyExistingGrid","newCellValues","isAlreadyExistingBrush","newCellAndBorderValues","adaptGridSizeToBrushSize","brushIsTooBig","generateCells","loadBrush","lastTouchedTime","Date","isTouchEvent","isMouseEvent","svgWidth","svgHeight","button","buttons","nativeEvent","which","_this$svg$getBounding","touches","clientX","clientY","panning","_this$state","newCell","toConsumableArray","slice","_this$state2","_this$state3","delta","deltaY","_this$state4","coord","refs","fetch","Request","then","response","json","svgStyle","gridPathData","onMouseMove","onMouseDown","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","onWheel","toolName","grid_Layer","src_controls_Controls","Footer_Footer","src_Panning","tools_PatchTool","tools_BackstitchTool","tools_TextTool","NotificationSystem_default","Boolean","location","hostname","match","render","src_App","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c344295e.chunk.js","sourcesContent":["import config from './config/configHandler';\nconst configData = config.get();\nlet windowWidth = window.innerWidth;\nlet windowHeight = window.innerHeight;\nconst bodyPaddingX = configData.bodyPaddingX;\nconst bodyPaddingY = configData.bodyPaddingY;\nlet wrapperWidth, wrapperHeight, colSize, rowSize;\n\nfunction getMinRow(array) {\n  return array.reduce((min, b) => Math.min(min, b.row), array[0].row);\n}\n\nfunction getMinCol(array) {\n  return array.reduce((min, b) => Math.min(min, b.col), array[0].col);\n}\n\nfunction getMaxRow(array) {\n  return array.reduce((max, b) => Math.max(max, b.row), array[0].row);\n}\n\nfunction getMaxCol(array) {\n  return array.reduce((max, b) => Math.max(max, b.col), array[0].col);\n}\n\nexport default {\n  initGridData: (cellSize, isResize) => {\n    if (isResize) {\n      windowWidth = window.innerWidth;\n      windowHeight = window.innerHeight;\n    }\n    wrapperWidth = windowWidth - bodyPaddingX * 2;\n    wrapperHeight = windowHeight - bodyPaddingY * 2;\n    colSize = Math.floor(wrapperWidth / cellSize);\n    rowSize = Math.floor(wrapperHeight / cellSize);\n  },\n\n  // Predict if the grid will have enough space to paint\n  // at least one cell when changing cell size\n  gridHasCells: newCellSize => {\n    const newRoundedCol = Math.floor(\n      (windowWidth - bodyPaddingX * 2) / newCellSize\n    );\n    const newRoundedRow = Math.floor(\n      (windowHeight - bodyPaddingY * 2) / newCellSize\n    );\n    return !!(newRoundedCol && newRoundedRow);\n  },\n\n  adaptGridSizeToGridSize: (gridSize, cellSize) => {\n    let newGridSize = [colSize, rowSize];\n    let newCellSize = cellSize;\n    let newRoundedCol, newRoundedRow, newWrapperHeight, newRowSize;\n    let gridTooBigWithSmallestCellSize = false;\n\n    // Try adapating the canvas size by reducing the cell size and keeping\n    // the actual border size\n    while (\n      !gridTooBigWithSmallestCellSize &&\n      (newGridSize[0] < gridSize[0] || newGridSize[1] < gridSize[1])\n    ) {\n      if (newCellSize <= 2) {\n        gridTooBigWithSmallestCellSize = true;\n        break;\n      }\n      newCellSize -= 2;\n      newRoundedCol = Math.floor(\n        (windowWidth - bodyPaddingX * 2) / newCellSize\n      );\n      newRoundedRow = Math.floor(\n        (windowHeight - bodyPaddingY * 2) / newCellSize\n      );\n      newWrapperHeight = newRoundedRow * newCellSize;\n      newRowSize = Math.floor(newWrapperHeight / newCellSize);\n      newGridSize = [newRoundedCol, newRowSize];\n    }\n\n    // If grid could be adapted to grid, return new cell values,\n    // Else grid is too big to adapt the canvas, return null\n    return !gridTooBigWithSmallestCellSize ? newCellSize : null;\n  },\n\n  createGrid: () => {\n    let grid = {};\n    const layers = Object.keys(configData.layers);\n    for (let i = 0; i < layers.length; i++) {\n      const layerName = layers[i];\n      grid[layerName] = [];\n    }\n    return grid;\n  },\n\n  findCellIndex: (layer, col, row) => {\n    return layer.findIndex(el => {\n      return el.col === col && el.row === row;\n    });\n  },\n\n  createShowLayers: () => {\n    let showLayers = {};\n    const layers = Object.keys(configData.layers);\n    for (let i = 0; i < layers.length; i++) {\n      const layerName = layers[i];\n      showLayers[layerName] = true;\n    }\n    return showLayers;\n  },\n\n  // Add a comma every 3 figures\n  formatDigits: totalCellsNumber =>\n    totalCellsNumber.toString().replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1,'),\n\n  getWrapperWidth: () => wrapperWidth,\n\n  getWrapperHeight: () => wrapperHeight,\n\n  getColSize: () => colSize,\n\n  getGridSize: () => [colSize, rowSize],\n\n  getSelectList: array =>\n    array.reduce((acc, el) => {\n      acc.push([el, el]);\n      return acc;\n    }, []),\n\n  getPointerType: eventType =>\n    eventType === 'touchstart' || eventType === 'touchmove' ? 'touch' : 'mouse',\n\n  getDeviceType: () =>\n    /Mobile|iP(hone|od|ad)|Android|BlackBerry|IEMobile/.test(\n      navigator.userAgent\n    )\n      ? 'mobile'\n      : 'desktop',\n\n  getSVGString: svgNode => {\n    const appendCSS = (cssText, element) => {\n      var styleElement = document.createElement('style');\n      styleElement.setAttribute('type', 'text/css');\n      styleElement.innerHTML = cssText;\n      var refNode = element.hasChildNodes() ? element.children[0] : null;\n      element.insertBefore(styleElement, refNode);\n    };\n\n    const getCSSStyles = parentElement => {\n      let selectorTextArr = [];\n\n      // Add parent element id and classes to the list\n      selectorTextArr.push(`#${parentElement.id}`);\n      for (let c = 0; c < parentElement.classList.length; c++)\n        if (!contains(`.${parentElement.classList[c]}`, selectorTextArr))\n          selectorTextArr.push(`.${parentElement.classList[c]}`);\n\n      // Add children element ids and classes to the list\n      const nodes = parentElement.getElementsByTagName('*');\n      for (let i = 0; i < nodes.length; i++) {\n        const id = nodes[i].id;\n        if (!contains(`#${id}`, selectorTextArr))\n          selectorTextArr.push(`#${id}`);\n\n        const classes = nodes[i].classList;\n        for (let c = 0; c < classes.length; c++)\n          if (!contains(`.${classes[c]}`, selectorTextArr))\n            selectorTextArr.push(`.${classes[c]}`);\n      }\n\n      // Extract CSS rules\n      let extractedCSSText = '';\n      for (let i = 0; i < document.styleSheets.length; i++) {\n        const s = document.styleSheets[i];\n\n        try {\n          if (!s.cssRules) continue;\n        } catch (e) {\n          if (e.name !== 'SecurityError') throw e; // for Firefox\n          continue;\n        }\n\n        const cssRules = s.cssRules;\n        for (let r = 0; r < cssRules.length; r++) {\n          if (contains(cssRules[r].selectorText, selectorTextArr))\n            extractedCSSText += cssRules[r].cssText;\n        }\n      }\n\n      return extractedCSSText;\n\n      function contains(str, arr) {\n        return arr.indexOf(str) === -1 ? false : true;\n      }\n    };\n\n    svgNode.setAttribute('xlink', 'http://www.w3.org/1999/xlink');\n    const cssStyleText = getCSSStyles(svgNode);\n    appendCSS(cssStyleText, svgNode);\n\n    const serializer = new XMLSerializer();\n    let svgString = serializer.serializeToString(svgNode);\n\n    // Fix root xlink without namespace\n    svgString = svgString.replace(/(\\w+)?:?xlink=/g, 'xmlns:xlink=');\n\n    // Safari NS namespace fix\n    svgString = svgString.replace(/NS\\d+:href/g, 'xlink:href');\n\n    return svgString;\n  },\n\n  svgString2Image: (svgString, width, height, callback) => {\n    // Convert SVG string to data URL\n    const imgsrc =\n      'data:image/svg+xml;base64,' +\n      btoa(unescape(encodeURIComponent(svgString)));\n\n    let canvas = document.createElement('canvas');\n    let context = canvas.getContext('2d');\n    canvas.width = width;\n    canvas.height = height;\n\n    let image = new Image();\n    image.onload = function() {\n      context.clearRect(0, 0, width, height);\n      context.drawImage(image, 0, 0, width, height);\n      canvas.toBlob(blob => callback(blob));\n    };\n    image.src = imgsrc;\n  },\n\n  getMinCoords: grid => {\n    const minPerLayer = Object.keys(grid)\n      .filter(layerName => {\n        if (grid[layerName].length === 0) {\n          return false;\n        }\n        return true;\n      })\n      .map(layerName => {\n        return {\n          row: getMinRow(grid[layerName]),\n          col: getMinCol(grid[layerName]),\n        };\n      });\n    return { row: getMinRow(minPerLayer), col: getMinCol(minPerLayer) };\n  },\n\n  getMaxCoords: grid => {\n    const maxPerLayer = Object.keys(grid)\n      .filter(layerName => {\n        if (grid[layerName].length === 0) {\n          return false;\n        }\n        return true;\n      })\n      .map(layerName => {\n        return {\n          row: getMaxRow(grid[layerName]),\n          col: getMaxCol(grid[layerName]),\n        };\n      });\n    return { row: getMaxRow(maxPerLayer), col: getMaxCol(maxPerLayer) };\n  },\n};\n","import React from 'react';\n\n/* Default config */\nexport default {\n  // Basic\n  bodyPaddingX: 14,\n  bodyPaddingY: 28,\n  colorTheme: 'default (light)', // See './colorThemes.js'\n  // Options\n  isControlsOpen: true,\n  isOptionsOpen: false,\n  showGridlines: true,\n  downloadFormat: 'svg',\n  cellSize: 60,\n  borderSizesList: [1, 2, 3, 4, 5, 6],\n  customColor: 'white',\n  borderSize: 4,\n  // Modal style\n  modalStyle: {\n    overlay: { backgroundColor: 'rgba(0, 0, 0, .5)', zIndex: 1000 },\n    content: {\n      position: 'absolute',\n      width: '260px',\n      background: 'rgba(0,0,0,.75)',\n      overflow: 'auto',\n      WebkitOverflowScrolling: 'touch',\n      outline: 'none',\n      padding: '15px',\n    },\n  },\n  // Default text options\n  showText: true,\n  textSize: 25,\n  textColor: 'rgba(0, 0, 0, 1)',\n  activeGrid: null,\n  layers: {\n    lgrid: [\n      'eraser',\n      'g1',\n      'g2',\n      'g3',\n      'g4',\n      'g5',\n      'g6',\n      'g7',\n      'g8',\n      'g9',\n      'g10',\n    ],\n    lfloor: [\n      'eraser',\n      'f1',\n      'f2',\n      'f3',\n      'f4',\n      'f5',\n      'f6',\n      'f7',\n      'f8',\n      'f9',\n      'f10',\n      'f11',\n      'f12',\n      'f13',\n    ],\n    lfloorm: [\n      'eraser',\n      'fm1',\n      'fm2',\n      'fm3',\n      'fm4',\n      'fm5',\n      'fm6',\n      'fm7',\n      'fm8',\n      'fm9',\n      'fm10',\n      'fm11',\n      'fm12',\n      'fm13',\n      'fm14',\n      'fm15',\n      'fm16',\n    ],\n    lwallv: ['eraser', 'w1v', 'w2v', 'w3v', 'w4v', 'w5v', 'w6v', 'w7v'],\n    lwallvm: [\n      'eraser',\n      'wm1v',\n      'wm2v',\n      'wm3v',\n      'wm4v',\n      'wm5v',\n      'wm6v',\n      'wm7v',\n      'wm8v',\n      'wm9v',\n    ],\n    lnotes: ['eraser', 'ln3'],\n  },\n  text: {\n    // Layer short names\n    lgrid: 'grid',\n    lfloor: 'floor',\n    lfloorm: 'floor m',\n    lwallv: 'wall',\n    lwallvm: 'wall m',\n    lnotes: 'notes',\n\n    // Layer full names\n    'lgrid-text': 'Grid (background)',\n    'lfloor-text': 'Floor',\n    'lfloorm-text': 'Floor markers',\n    'lwallv-text': 'Wall',\n    'lwallvm-text': 'Wall markers',\n    'lnotes-text': 'Notes (text)',\n\n    // Ground styles\n    'lgrid-eraser': 'eraser',\n    'lgrid-g1': 'light gray',\n    'lgrid-g2': 'gray',\n    'lgrid-g3': 'light blue',\n    'lgrid-g4': 'blue',\n    'lgrid-g5': 'light green',\n    'lgrid-g6': 'green',\n    'lgrid-g7': 'yellow',\n    'lgrid-g8': 'brown',\n    'lgrid-g9': 'red',\n    'lgrid-g10': 'custom color',\n\n    // Floor styles\n    'lfloor-eraser': 'eraser',\n    'lfloor-f1': 'wall 1',\n    'lfloor-f2': 'wall 2',\n    'lfloor-f3': 'secret wall',\n    'lfloor-f4': 'door v',\n    'lfloor-f5': 'door h',\n    'lfloor-f6': 'pressure plate',\n    'lfloor-f7': 'pit',\n    'lfloor-f8': 'water',\n    'lfloor-f9': 'stairs up',\n    'lfloor-f10': 'stairs down',\n    'lfloor-f11': 'exit',\n    'lfloor-f12': 'fence',\n    'lfloor-f13': 'magic',\n\n    // Floor Mark styles\n    'lfloorm-eraser': 'eraser',\n    'lfloorm-fm1': 'x/lock',\n    'lfloorm-fm2': 'arrow E',\n    'lfloorm-fm3': 'arrow W',\n    'lfloorm-fm4': 'arrow N',\n    'lfloorm-fm5': 'arrow S',\n    'lfloorm-fm6': '?',\n    'lfloorm-fm7': '!',\n    'lfloorm-fm8': 'chest',\n    'lfloorm-fm9': 'quest',\n    'lfloorm-fm10': 'battle',\n    'lfloorm-fm11': 'key',\n    'lfloorm-fm12': 'spinner',\n    'lfloorm-fm13': 'teleport',\n    'lfloorm-fm14': 'food',\n    'lfloorm-fm15': 'tree',\n    'lfloorm-fm16': 'house',\n\n    // Wall styles\n    'lwallv-eraser': 'eraser',\n    'lwallv-w1v': 'wall',\n    'lwallv-w2v': 'door',\n    'lwallv-w3v': 'secret door',\n    'lwallv-w4v': 'false wall',\n    'lwallv-w5v': 'alcove R',\n    'lwallv-w6v': 'alcove L',\n    'lwallv-w7v': 'archway',\n\n    // Wall Mark styles\n    'lwallvm-eraser': 'eraser',\n    'lwallvm-wm1v': 'x/lock',\n    'lwallvm-wm2v': 'arrow R',\n    'lwallvm-wm3v': 'arrow L',\n    'lwallvm-wm4v': 'grate',\n    'lwallvm-wm5v': 'button/lever R',\n    'lwallvm-wm6v': 'button/lever L',\n    'lwallvm-wm7v': 'keyhole',\n    'lwallvm-wm8v': 'fountain R',\n    'lwallvm-wm9v': 'fountain L',\n\n    // Note styles\n    'lnotes-eraser': 'eraser',\n    'lnotes-ln3': 'label',\n  },\n  symbols: {\n    selected: color => (\n      <symbol key=\"selected\" id=\"selected\" viewBox=\"0 0 1 1\">\n        <rect x=\"0\" y=\"0\" width=\"1\" height=\"1\" fill=\"#999\" />\n      </symbol>\n    ),\n    g1: color => (\n      <symbol key=\"g1\" id=\"g1\" viewBox=\"0 0 1 1\">\n        <rect x=\"0\" y=\"0\" width=\"1\" height=\"1\" fill=\"#999\" />\n      </symbol>\n    ),\n    g2: color => (\n      <symbol key=\"g2\" id=\"g2\" viewBox=\"0 0 1 1\">\n        <rect x=\"0\" y=\"0\" width=\"1\" height=\"1\" fill=\"#666\" />\n      </symbol>\n    ),\n    g3: color => (\n      <symbol key=\"g3\" id=\"g3\" viewBox=\"0 0 1 1\">\n        <rect x=\"0\" y=\"0\" width=\"1\" height=\"1\" fill=\"#7ea9ff\" />\n      </symbol>\n    ),\n    g4: color => (\n      <symbol key=\"g4\" id=\"g4\" viewBox=\"0 0 1 1\">\n        <rect x=\"0\" y=\"0\" width=\"1\" height=\"1\" fill=\"#537bca\" />\n      </symbol>\n    ),\n    g5: color => (\n      <symbol key=\"g5\" id=\"g5\" viewBox=\"0 0 1 1\">\n        <rect x=\"0\" y=\"0\" width=\"1\" height=\"1\" fill=\"#99ff99\" />\n      </symbol>\n    ),\n    g6: color => (\n      <symbol key=\"g6\" id=\"g6\" viewBox=\"0 0 1 1\">\n        <rect x=\"0\" y=\"0\" width=\"1\" height=\"1\" fill=\"#5dc65d\" />\n      </symbol>\n    ),\n    g7: color => (\n      <symbol key=\"g7\" id=\"g7\" viewBox=\"0 0 1 1\">\n        <rect x=\"0\" y=\"0\" width=\"1\" height=\"1\" fill=\"#ffff99\" />\n      </symbol>\n    ),\n    g8: color => (\n      <symbol key=\"g8\" id=\"g8\" viewBox=\"0 0 1 1\">\n        <rect x=\"0\" y=\"0\" width=\"1\" height=\"1\" fill=\"#d2bc80\" />\n      </symbol>\n    ),\n    g9: color => (\n      <symbol key=\"g9\" id=\"g9\" viewBox=\"0 0 1 1\">\n        <rect x=\"0\" y=\"0\" width=\"1\" height=\"1\" fill=\"#f99\" />\n      </symbol>\n    ),\n    g10: color => (\n      <symbol key=\"g10\" id=\"g10\" viewBox=\"0 0 1 1\">\n        <rect\n          x=\"0\"\n          y=\"0\"\n          width=\"1\"\n          height=\"1\"\n          fill={`rgb(${color.r}, ${color.g}, ${color.b})`}\n          fillOpacity={color.a}\n        />\n      </symbol>\n    ),\n    f1: color => (\n      <symbol key={'f1'} id={'f1'} viewBox=\"0 0 30 30\">\n        <g\n          stroke=\"black\"\n          strokeWidth=\"1.1\"\n          strokeLinecap=\"square\"\n          strokeLinejoin=\"miter\"\n        >\n          <line x1=\"-30\" y1=\"30\" x2=\"0\" y2=\"0\" />\n          <line x1=\"-25\" y1=\"30\" x2=\"5\" y2=\"0\" />\n          <line x1=\"-20\" y1=\"30\" x2=\"10\" y2=\"0\" />\n          <line x1=\"-15\" y1=\"30\" x2=\"15\" y2=\"0\" />\n          <line x1=\"-10\" y1=\"30\" x2=\"20\" y2=\"0\" />\n          <line x1=\"-5\" y1=\"30\" x2=\"25\" y2=\"0\" />\n          <line x1=\"0\" y1=\"30\" x2=\"30\" y2=\"0\" />\n          <line x1=\"5\" y1=\"30\" x2=\"35\" y2=\"0\" />\n          <line x1=\"10\" y1=\"30\" x2=\"40\" y2=\"0\" />\n          <line x1=\"15\" y1=\"30\" x2=\"45\" y2=\"0\" />\n          <line x1=\"20\" y1=\"30\" x2=\"50\" y2=\"0\" />\n          <line x1=\"25\" y1=\"30\" x2=\"55\" y2=\"0\" />\n          <line x1=\"30\" y1=\"30\" x2=\"60\" y2=\"0\" />\n        </g>\n      </symbol>\n    ),\n    f2: color => (\n      <symbol key={'f2'} id={'f2'} viewBox=\"0 0 30 30\">\n        <g\n          stroke=\"black\"\n          strokeWidth=\"0.9\"\n          strokeLinecap=\"square\"\n          strokeLinejoin=\"miter\"\n        >\n          <line x1=\"-28\" y1=\"30\" x2=\"2\" y2=\"0\" />\n          <line x1=\"-25\" y1=\"30\" x2=\"5\" y2=\"0\" />\n          <line x1=\"-22\" y1=\"30\" x2=\"8\" y2=\"0\" />\n          <line x1=\"-19\" y1=\"30\" x2=\"11\" y2=\"0\" />\n          <line x1=\"-16\" y1=\"30\" x2=\"14\" y2=\"0\" />\n          <line x1=\"-13\" y1=\"30\" x2=\"17\" y2=\"0\" />\n          <line x1=\"-10\" y1=\"30\" x2=\"20\" y2=\"0\" />\n          <line x1=\"-7\" y1=\"30\" x2=\"23\" y2=\"0\" />\n          <line x1=\"-4\" y1=\"30\" x2=\"26\" y2=\"0\" />\n          <line x1=\"-1\" y1=\"30\" x2=\"29\" y2=\"0\" />\n          <line x1=\"2\" y1=\"30\" x2=\"32\" y2=\"0\" />\n          <line x1=\"5\" y1=\"30\" x2=\"35\" y2=\"0\" />\n          <line x1=\"8\" y1=\"30\" x2=\"38\" y2=\"0\" />\n          <line x1=\"11\" y1=\"30\" x2=\"41\" y2=\"0\" />\n          <line x1=\"14\" y1=\"30\" x2=\"44\" y2=\"0\" />\n          <line x1=\"17\" y1=\"30\" x2=\"47\" y2=\"0\" />\n          <line x1=\"20\" y1=\"30\" x2=\"50\" y2=\"0\" />\n          <line x1=\"23\" y1=\"30\" x2=\"53\" y2=\"0\" />\n          <line x1=\"26\" y1=\"30\" x2=\"56\" y2=\"0\" />\n          <line x1=\"29\" y1=\"30\" x2=\"59\" y2=\"0\" />\n        </g>\n      </symbol>\n    ),\n    f3: color => (\n      <g key=\"f3\">\n        <pattern\n          id=\"checkerboard\"\n          width=\"2\"\n          height=\"2\"\n          patternUnits=\"userSpaceOnUse\"\n        >\n          <path fill=\"white\" d=\"m0,0h1v1H0\" />\n          <path fill=\"black\" d=\"m0,0h1v2h1V1H0\" fillOpacity=\"1\" />\n        </pattern>\n        <symbol id=\"f3\" viewBox=\"0 0 10 10\">\n          <rect\n            x=\"0\"\n            y=\"0\"\n            width=\"10\"\n            height=\"10\"\n            style={{ fill: 'url(#checkerboard)' }}\n          />\n        </symbol>\n      </g>\n    ),\n    f4: color => (\n      <symbol key=\"f4\" id=\"f4\" viewBox=\"0 0 26 26\">\n        <rect\n          fill=\"white\"\n          stroke=\"black\"\n          strokeWidth=\"0.5\"\n          x=\"11.5\"\n          y=\"4\"\n          width=\"3\"\n          height=\"18\"\n        />\n        <g stroke=\"black\" strokeWidth=\"1\">\n          <rect x=\"11\" y=\"0\" width=\"4\" height=\"4\" />\n          <rect x=\"11\" y=\"22\" width=\"4\" height=\"4\" />\n        </g>\n      </symbol>\n    ),\n    f5: color => (\n      <symbol key=\"f5\" id=\"f5\" viewBox=\"0 0 26 26\">\n        <rect\n          fill=\"white\"\n          stroke=\"black\"\n          strokeWidth=\"0.5\"\n          x=\"4\"\n          y=\"11.5\"\n          width=\"18\"\n          height=\"3\"\n        />\n        <g stroke=\"black\" strokeWidth=\"1.5\">\n          <rect x=\"0\" y=\"11\" width=\"4\" height=\"4\" />\n          <rect x=\"22\" y=\"11\" width=\"4\" height=\"4\" />\n        </g>\n      </symbol>\n    ),\n    f6: color => (\n      <symbol key=\"f6\" id=\"f6\" viewBox=\"0 0 27 27\">\n        <rect x=\"6\" y=\"6\" width=\"14\" height=\"14\" fill=\"#999999\" />\n        <rect x=\"7\" y=\"7\" width=\"12\" height=\"12\" fill=\"black\" />\n        <rect x=\"9\" y=\"9\" width=\"8\" height=\"8\" fill=\"white\" />\n      </symbol>\n    ),\n    f7: color => (\n      <symbol key=\"f7\" id=\"f7\" viewBox=\"0 0 24 24\">\n        <rect\n          x=\"3\"\n          y=\"3\"\n          width=\"18\"\n          height=\"18\"\n          fill=\"none\"\n          stroke=\"black\"\n          strokeWidth=\"1\"\n        />\n      </symbol>\n    ),\n    f8: color => (\n      <symbol key=\"f8\" id=\"f8\" viewBox=\"-909 491 100 100\">\n        <g transform=\"translate(-10e-4,-5.44)\">\n          <path\n            d=\"m -809,584.826 c -5.451,0 -10.608,-2.085 -14.52,-5.87 l -2.146,-2.076 -2.146,2.076 c -3.913,3.785 -9.07,5.87 -14.521,5.87 -5.451,0 -10.608,-2.085 -14.52,-5.87 l -2.146,-2.076 -2.146,2.076 c -3.913,3.785 -9.07,5.87 -14.52,5.87 -5.451,0 -10.608,-2.085 -14.52,-5.87 l -2.146,-2.076 -2.146,2.076 c -3.913,3.785 -9.07,5.87 -14.521,5.87 l 0,6.174 c 6.105,0 11.925,-2.019 16.667,-5.735 4.741,3.716 10.562,5.735 16.667,5.735 6.105,0 11.925,-2.019 16.667,-5.735 4.741,3.716 10.562,5.735 16.667,5.735 6.105,0 11.925,-2.019 16.667,-5.735 4.738,3.716 10.558,5.735 16.663,5.735 l 0,-6.174 z\"\n            fill=\"#000000\"\n          />\n          <path\n            d=\"m -809,559.826 c -5.451,0 -10.608,-2.085 -14.52,-5.87 l -2.146,-2.076 -2.146,2.076 c -3.913,3.785 -9.07,5.87 -14.521,5.87 -5.451,0 -10.608,-2.085 -14.52,-5.87 l -2.146,-2.076 -2.146,2.076 c -3.913,3.785 -9.07,5.87 -14.52,5.87 -5.451,0 -10.608,-2.085 -14.52,-5.87 l -2.146,-2.076 -2.146,2.076 c -3.913,3.785 -9.07,5.87 -14.521,5.87 l 0,6.174 c 6.105,0 11.925,-2.019 16.667,-5.735 4.741,3.716 10.562,5.735 16.667,5.735 6.105,0 11.925,-2.019 16.667,-5.735 4.741,3.716 10.562,5.735 16.667,5.735 6.105,0 11.925,-2.019 16.667,-5.735 4.738,3.716 10.558,5.735 16.663,5.735 l 0,-6.174 z\"\n            fill=\"#000000\"\n          />\n          <path\n            d=\"m -809,534.826 c -5.451,0 -10.608,-2.085 -14.52,-5.87 l -2.146,-2.076 -2.146,2.076 c -3.913,3.785 -9.07,5.87 -14.521,5.87 -5.451,0 -10.608,-2.085 -14.52,-5.87 l -2.146,-2.076 -2.146,2.076 c -3.913,3.785 -9.07,5.87 -14.52,5.87 -5.451,0 -10.608,-2.085 -14.52,-5.87 l -2.146,-2.076 -2.146,2.076 c -3.913,3.785 -9.07,5.87 -14.521,5.87 l 0,6.174 c 6.105,0 11.925,-2.019 16.667,-5.735 4.741,3.716 10.562,5.735 16.667,5.735 6.105,0 11.925,-2.019 16.667,-5.735 4.741,3.716 10.562,5.735 16.667,5.735 6.105,0 11.925,-2.019 16.667,-5.735 4.738,3.716 10.558,5.735 16.663,5.735 l 0,-6.174 z\"\n            fill=\"#000000\"\n          />\n          <path\n            d=\"m -809,509.826 c -5.451,0 -10.608,-2.085 -14.52,-5.87 l -2.146,-2.076 -2.146,2.076 c -3.913,3.785 -9.07,5.87 -14.521,5.87 -5.451,0 -10.608,-2.085 -14.52,-5.87 l -2.146,-2.076 -2.146,2.076 c -3.913,3.785 -9.07,5.87 -14.52,5.87 -5.451,0 -10.608,-2.085 -14.52,-5.87 l -2.146,-2.076 -2.146,2.076 c -3.913,3.785 -9.07,5.87 -14.521,5.87 l 0,6.174 c 6.105,0 11.925,-2.019 16.667,-5.735 4.741,3.716 10.562,5.735 16.667,5.735 6.105,0 11.925,-2.019 16.667,-5.735 4.741,3.716 10.562,5.735 16.667,5.735 6.105,0 11.925,-2.019 16.667,-5.735 4.738,3.716 10.558,5.735 16.663,5.735 l 0,-6.174 z\"\n            fill=\"#000000\"\n          />\n        </g>\n      </symbol>\n    ),\n    f9: color => (\n      <symbol key=\"f9\" id=\"f9\" viewBox=\"0 0 639.752 565.145\">\n        <g transform=\"translate(100,100)\" stroke=\"none\" fill=\"#000000\">\n          <path d=\"M 0 323.974L 80.05 323.974L 80.05 242.499L 159.584 242.499L 159.584 160.474L 240.373 160.474L 240.373 79.974L 320.614 79.974L 320.614 0L 439.752 0L 439.752 40.804L 360.55 40.804L 360.55 121.082L 280.218 121.082L 280.218 202.49L 200.05 202.49L 200.05 283.474L 119.55 283.474L 119.55 365.145L 0 365.145L 0 323.974z\" />\n          <path d=\"M 358.843 237.888L 288.05 237.888C 268.55 237.888 267.8 267.888 288.05 267.888L 324.337 267.888L 255.325 336.9C 240.026 352.2 261.664 374.338 277.918 358.085L 345.903 289.912L 345.903 325.828C 345.8 345.328 376.05 346.078 376.096 325.828L 376.096 255.474C 376.096 244.974 369.05 237.888 358.843 237.888z\" />\n        </g>\n      </symbol>\n    ),\n    f10: color => (\n      <symbol key=\"f10\" id=\"f10\" viewBox=\"0 0 639.752 565.145\">\n        <g transform=\"translate(100,100)\" stroke=\"none\" fill=\"#000000\">\n          <path d=\"M 0 323.974L 80.05 323.974L 80.05 242.499L 159.584 242.499L 159.584 160.474L 240.373 160.474L 240.373 79.974L 320.614 79.974L 320.614 0L 439.752 0L 439.752 40.804L 360.55 40.804L 360.55 121.082L 280.218 121.082L 280.218 202.49L 200.05 202.49L 200.05 283.474L 119.55 283.474L 119.55 365.145L 0 365.145L 0 323.974z\" />\n          <path d=\"M 266.757 363.56L 337.55 363.56C 357.05 363.56 357.8 333.56 337.55 333.56L 301.263 333.56L 370.275 264.548C 385.574 249.249 363.935 227.11 347.682 243.363L 279.697 311.536L 279.697 275.621C 279.8 256.121 249.55 255.371 249.504 275.621L 249.504 345.974C 249.504 356.474 256.55 363.56 266.757 363.56z\" />\n        </g>\n      </symbol>\n    ),\n    f11: color => (\n      <symbol key=\"f11\" id=\"f11\" viewBox=\"0 0 24 24\">\n        <g transform=\"translate(4,4)\">\n          <path d=\"M12 10v-2h-5v-2h5v-2l3 3zM11 9v4h-5v3l-6-3v-13h11v5h-1v-4h-8l4 2v9h4v-3z\" />\n        </g>\n      </symbol>\n    ),\n    f12: color => (\n      <symbol key=\"f12\" id=\"f12\" viewBox=\"0 0 30 30\">\n        <g stroke=\"black\" strokeWidth=\"0.5\" strokeLinecap=\"square\">\n          <line x1=\"0\" y1=\"-31\" x2=\"30\" y2=\"-1\" />\n          <line x1=\"0\" y1=\"-25\" x2=\"30\" y2=\"5\" />\n          <line x1=\"0\" y1=\"-19\" x2=\"30\" y2=\"11\" />\n          <line x1=\"0\" y1=\"-13\" x2=\"30\" y2=\"17\" />\n          <line x1=\"0\" y1=\"-7\" x2=\"30\" y2=\"23\" />\n          <line x1=\"0\" y1=\"-1\" x2=\"30\" y2=\"29\" />\n          <line x1=\"0\" y1=\"5\" x2=\"30\" y2=\"35\" />\n          <line x1=\"0\" y1=\"11\" x2=\"30\" y2=\"41\" />\n          <line x1=\"0\" y1=\"17\" x2=\"30\" y2=\"47\" />\n          <line x1=\"0\" y1=\"23\" x2=\"30\" y2=\"53\" />\n          <line x1=\"0\" y1=\"29\" x2=\"30\" y2=\"59\" />\n\n          <line x1=\"-35\" y1=\"30\" x2=\"0\" y2=\"-5\" />\n          <line x1=\"-29\" y1=\"30\" x2=\"6\" y2=\"-5\" />\n          <line x1=\"-23\" y1=\"30\" x2=\"12\" y2=\"-5\" />\n          <line x1=\"-17\" y1=\"30\" x2=\"18\" y2=\"-5\" />\n          <line x1=\"-11\" y1=\"30\" x2=\"24\" y2=\"-5\" />\n          <line x1=\"-5\" y1=\"30\" x2=\"30\" y2=\"-5\" />\n          <line x1=\"1\" y1=\"30\" x2=\"36\" y2=\"-5\" />\n          <line x1=\"7\" y1=\"30\" x2=\"42\" y2=\"-5\" />\n          <line x1=\"13\" y1=\"30\" x2=\"48\" y2=\"-5\" />\n          <line x1=\"19\" y1=\"30\" x2=\"54\" y2=\"-5\" />\n          <line x1=\"25\" y1=\"30\" x2=\"60\" y2=\"-5\" />\n          <line x1=\"31\" y1=\"30\" x2=\"66\" y2=\"-5\" />\n        </g>\n      </symbol>\n    ),\n    f13: color => (\n      <g>\n        <defs>\n          <pattern\n            x=\"0\"\n            y=\"0\"\n            id=\"magic\"\n            width=\"12\"\n            height=\"12\"\n            patternUnits=\"userSpaceOnUse\"\n          >\n            <g fill=\"black\">\n              <rect x=\"0\" y=\"0\" width=\"1\" height=\"1\" />\n              <rect x=\"0\" y=\"6\" width=\"1\" height=\"1\" />\n              <rect x=\"6\" y=\"0\" width=\"1\" height=\"1\" />\n              <rect x=\"6\" y=\"6\" width=\"1\" height=\"1\" />\n              <rect x=\"8\" y=\"2\" width=\"1\" height=\"1\" />\n              <rect x=\"10\" y=\"2\" width=\"1\" height=\"1\" />\n              <rect x=\"9\" y=\"3\" width=\"1\" height=\"1\" />\n              <rect x=\"8\" y=\"4\" width=\"1\" height=\"1\" />\n              <rect x=\"10\" y=\"4\" width=\"1\" height=\"1\" />\n              <rect x=\"2\" y=\"8\" width=\"1\" height=\"1\" />\n              <rect x=\"4\" y=\"8\" width=\"1\" height=\"1\" />\n              <rect x=\"3\" y=\"9\" width=\"1\" height=\"1\" />\n              <rect x=\"2\" y=\"10\" width=\"1\" height=\"1\" />\n              <rect x=\"4\" y=\"10\" width=\"1\" height=\"1\" />\n            </g>\n            <g fill=\"#626262\">\n              <rect x=\"2\" y=\"2\" width=\"1\" height=\"1\" />\n              <rect x=\"4\" y=\"2\" width=\"1\" height=\"1\" />\n              <rect x=\"3\" y=\"3\" width=\"1\" height=\"1\" />\n              <rect x=\"2\" y=\"4\" width=\"1\" height=\"1\" />\n              <rect x=\"4\" y=\"4\" width=\"1\" height=\"1\" />\n              <rect x=\"8\" y=\"8\" width=\"1\" height=\"1\" />\n              <rect x=\"10\" y=\"8\" width=\"1\" height=\"1\" />\n              <rect x=\"9\" y=\"9\" width=\"1\" height=\"1\" />\n              <rect x=\"8\" y=\"10\" width=\"1\" height=\"1\" />\n              <rect x=\"10\" y=\"10\" width=\"1\" height=\"1\" />\n            </g>\n          </pattern>\n        </defs>\n        <symbol key=\"f13\" id=\"f13\" viewBox=\"0 0 30 30\">\n          <rect width=\"100%\" height=\"100%\" fill=\"url(#magic)\" />\n        </symbol>\n      </g>\n    ),\n    fm1: color => (\n      <symbol key=\"fm1\" id=\"fm1\" viewBox=\"0 0 14 14\">\n        <g stroke=\"black\" strokeWidth=\"0.5\" strokeLinecap=\"square\">\n          <line x1=\"5\" y1=\"5\" x2=\"9\" y2=\"9\" />\n          <line x1=\"9\" y1=\"5\" x2=\"5\" y2=\"9\" />\n        </g>\n      </symbol>\n    ),\n    fm2: color => (\n      <symbol key=\"fm2\" id=\"fm2\" viewBox=\"0 0 14 14\">\n        <line\n          x1=\"4\"\n          y1=\"7\"\n          x2=\"9\"\n          y2=\"7\"\n          stroke=\"black\"\n          strokeWidth=\"0.5\"\n          strokeLinecap=\"square\"\n        />\n        <polygon points=\"9,6 9,8 10,7\" />\n      </symbol>\n    ),\n    fm3: color => (\n      <symbol key=\"fm3\" id=\"fm3\" viewBox=\"0 0 14 14\">\n        <line\n          x1=\"4\"\n          y1=\"7\"\n          x2=\"9\"\n          y2=\"7\"\n          stroke=\"black\"\n          strokeWidth=\"0.5\"\n          strokeLinecap=\"square\"\n        />\n        <polygon points=\"4,6 4,8 3,7\" />\n      </symbol>\n    ),\n    fm4: color => (\n      <symbol key=\"fm4\" id=\"fm4\" viewBox=\"0 0 14 14\">\n        <line\n          x1=\"7\"\n          y1=\"4\"\n          x2=\"7\"\n          y2=\"9\"\n          stroke=\"black\"\n          strokeWidth=\"0.5\"\n          strokeLinecap=\"square\"\n        />\n        <polygon points=\"6,4 8,4 7,3\" />\n      </symbol>\n    ),\n    fm5: color => (\n      <symbol key=\"fm5\" id=\"fm5\" viewBox=\"0 0 14 14\">\n        <line\n          x1=\"7\"\n          y1=\"4\"\n          x2=\"7\"\n          y2=\"9\"\n          stroke=\"black\"\n          strokeWidth=\"0.5\"\n          strokeLinecap=\"square\"\n        />\n        <polygon points=\"6,9 8,9 7,10\" />\n      </symbol>\n    ),\n    fm6: color => (\n      <symbol key=\"fm6\" id=\"fm6\" viewBox=\"0 0 34 56\">\n        <g transform=\"translate(8.5,14)\">\n          <path d=\"M11 19.625v3.75c0 0.344-0.281 0.625-0.625 0.625h-3.75c-0.344 0-0.625-0.281-0.625-0.625v-3.75c0-0.344 0.281-0.625 0.625-0.625h3.75c0.344 0 0.625 0.281 0.625 0.625zM15.937 10.25c0 2.969-2.016 4.109-3.5 4.937-0.922 0.531-1.5 1.609-1.5 2.063v0c0 0.344-0.266 0.75-0.625 0.75h-3.75c-0.344 0-0.562-0.531-0.562-0.875v-0.703c0-1.891 1.875-3.516 3.25-4.141 1.203-0.547 1.703-1.062 1.703-2.063 0-0.875-1.141-1.656-2.406-1.656-0.703 0-1.344 0.219-1.687 0.453-0.375 0.266-0.75 0.641-1.672 1.797-0.125 0.156-0.313 0.25-0.484 0.25-0.141 0-0.266-0.047-0.391-0.125l-2.562-1.953c-0.266-0.203-0.328-0.547-0.156-0.828 1.687-2.797 4.062-4.156 7.25-4.156 3.344 0 7.094 2.672 7.094 6.25z\" />\n        </g>\n      </symbol>\n    ),\n    fm7: color => (\n      <symbol key=\"fm7\" id=\"fm7\" viewBox=\"0 0 20 56\">\n        <g transform=\"translate(5,14)\">\n          <path d=\"M8 19.5v3.5c0 0.547-0.453 1-1 1h-4c-0.547 0-1-0.453-1-1v-3.5c0-0.547 0.453-1 1-1h4c0.547 0 1 0.453 1 1zM8.469 3l-0.438 12c-0.016 0.547-0.484 1-1.031 1h-4c-0.547 0-1.016-0.453-1.031-1l-0.438-12c-0.016-0.547 0.422-1 0.969-1h5c0.547 0 0.984 0.453 0.969 1z\" />\n        </g>\n      </symbol>\n    ),\n    fm8: color => (\n      <symbol key=\"fm8\" id=\"fm8\" viewBox=\"0 0 100 125\">\n        <g transform=\"translate(0,20)\">\n          <path\n            fill=\"#ffffff\"\n            d=\"M92.209,41.922c-0.001-0.685-0.468-1.282-1.132-1.452c-0.641-0.163-15.69-4.189-15.712-20.201  c-0.001-0.828-0.673-1.498-1.5-1.498c-0.001,0-0.001,0-0.002,0l-47.809,0.063c-0.828,0.001-1.499,0.674-1.498,1.502  C24.578,36.348,9.539,40.415,8.901,40.579c-0.665,0.17-1.131,0.77-1.13,1.456l0.02,14.991c0.001,0.397,0.159,0.779,0.44,1.061  c0.281,0.28,0.662,0.438,1.06,0.438c0.001,0,0.001,0,0.002,0l3.554-0.005l8.388,21.75c0.223,0.578,0.779,0.96,1.399,0.96  c0.001,0,0.001,0,0.002,0l55.187-0.073c0.621-0.001,1.177-0.384,1.399-0.964l8.331-21.772l3.177-0.004  c0.828-0.001,1.499-0.674,1.498-1.502L92.209,41.922z\"\n          />\n          <path\n            fill=\"#000000\"\n            d=\"M45.969,25.308L45.969,25.308l-12.688,0.017c-0.465,0.001-0.868,0.321-0.973,0.773  C29.661,37.5,20.604,43.06,16.834,44.921c-0.342,0.168-0.559,0.517-0.558,0.897l0.003,2.195c0.001,0.552,0.448,0.999,1,0.999h0.001  l28.719-0.038c0.266,0,0.52-0.106,0.707-0.294s0.292-0.442,0.292-0.707l-0.029-21.667C46.968,25.755,46.521,25.308,45.969,25.308z\"\n          />\n          <path\n            fill=\"#000000\"\n            d=\"M45.936,64.491c-0.188-0.188-0.441-0.292-0.706-0.292h-0.001l-20.333,0.027c-0.319,0-0.618,0.152-0.807,0.41  c-0.188,0.257-0.242,0.589-0.146,0.893l2.854,8.996c0.132,0.415,0.518,0.697,0.953,0.697h0.001l17.491-0.023  c0.553-0.001,1-0.449,0.999-1.001l-0.012-9C46.229,64.932,46.123,64.678,45.936,64.491z\"\n          />\n          <path\n            fill=\"#000000\"\n            d=\"M92.209,41.922c-0.001-0.685-0.468-1.282-1.132-1.452c-0.641-0.163-15.69-4.189-15.712-20.201  c-0.001-0.828-0.673-1.498-1.5-1.498c-0.001,0-0.001,0-0.002,0l-47.809,0.063c-0.828,0.001-1.499,0.674-1.498,1.502  C24.578,36.348,9.539,40.415,8.901,40.579c-0.665,0.17-1.131,0.77-1.13,1.456l0.02,14.991c0.001,0.397,0.159,0.779,0.44,1.061  c0.281,0.28,0.662,0.438,1.06,0.438c0.001,0,0.001,0,0.002,0l3.554-0.005l8.388,21.75c0.223,0.578,0.779,0.96,1.399,0.96  c0.001,0,0.001,0,0.002,0l55.187-0.073c0.621-0.001,1.177-0.384,1.399-0.964l8.331-21.772l3.177-0.004  c0.828-0.001,1.499-0.674,1.498-1.502L92.209,41.922z M76.789,78.157l-53.127,0.071l-7.323-18.99l26.311-0.035l0.002,1.73  c0.001,0.828,0.673,1.498,1.5,1.498c0.001,0,0.001,0,0.002,0l12.914-0.017c0.828-0.001,1.499-0.674,1.498-1.502l-0.002-1.731  l25.498-0.034L76.789,78.157z M45.644,54.521l9.915-0.013l0.006,4.908l-9.914,0.013L45.644,54.521z M58.56,55.458l-0.003-2.454  c0-0.397-0.159-0.779-0.44-1.06c-0.281-0.281-0.662-0.438-1.06-0.438c-0.001,0-0.001,0-0.002,0L44.14,51.523  c-0.397,0.001-0.779,0.159-1.061,0.44c-0.28,0.282-0.438,0.664-0.438,1.062l0.003,2.455l-31.856,0.042l-0.017-12.396  c3.812-1.35,15.976-6.779,16.746-21.293l44.889-0.06c0.81,14.512,12.988,19.909,16.803,21.248l0.017,12.396L58.56,55.458z\"\n          />\n          <path\n            fill=\"#000000\"\n            d=\"M83.529,44.833c-3.776-1.852-12.849-7.388-15.524-18.782c-0.106-0.452-0.51-0.771-0.974-0.771H67.03  l-12.687,0.017c-0.553,0.001-1,0.449-0.999,1.001l0.028,21.668c0,0.266,0.106,0.52,0.294,0.707s0.441,0.292,0.706,0.292h0.001  l28.719-0.038c0.266,0,0.52-0.106,0.707-0.294s0.292-0.442,0.292-0.707l-0.003-2.195C84.088,45.348,83.871,45,83.529,44.833z\"\n          />\n          <path\n            fill=\"#000000\"\n            d=\"M53.229,65.188l0.012,9c0,0.266,0.106,0.52,0.294,0.707c0.188,0.187,0.441,0.292,0.706,0.292h0.001  l18.45-0.024c0.437-0.001,0.822-0.284,0.953-0.7l2.829-9.004c0.096-0.304,0.04-0.636-0.148-0.892  c-0.188-0.257-0.487-0.408-0.806-0.408H75.52l-21.291,0.028C53.676,64.188,53.229,64.636,53.229,65.188z\"\n          />\n        </g>\n      </symbol>\n    ),\n    fm9: color => (\n      <symbol key=\"fm9\" id=\"fm9\" viewBox=\"0 0 32 32\">\n        <path\n          fill=\"white\"\n          d=\"M23 8h-14c-0.553 0-1 0.447-1 1v11c0 0.553 0.447 1 1 1h2v3l4.5-3h7.5c0.553 0 1-0.447 1-1v-11c0-0.553-0.447-1-1-1z\"\n        />\n        <path\n          fill=\"black\"\n          d=\"M12 15h8v2h-8zM12 12h8v2h-8zM23 8h-14c-0.553 0-1 0.447-1 1v11c0 0.553 0.447 1 1 1h2v3l4.5-3h7.5c0.553 0 1-0.447 1-1v-11c0-0.553-0.447-1-1-1zM22 19h-6.5l-2.5 1.5v-1.5h-3v-9h12v9z\"\n        />\n      </symbol>\n    ),\n    fm10: color => (\n      <symbol key=\"fm10\" id=\"fm10\" viewBox=\"0 0 512 512\">\n        <path\n          fill=\"white\"\n          d=\"m 416.10981,367.67538 c -4.54252,-4.54253 -10.56481,-7.07414 -16.98562,-7.13555 l -34.74806,-34.7474 17.24108,-17.25153 c 2.12328,-2.11283 2.65378,-5.35917 1.30663,-8.04366 l -9.85073,-19.71062 c -1.00023,-2.00046 -2.90923,-3.39921 -5.12398,-3.75658 -2.20495,-0.35737 -4.45041,0.36717 -6.0432,1.9495 l -14.78068,14.78134 -51.69252,-51.69776 92.98356,-92.98879 c 1.06165,-1.06687 1.75612,-2.44994 1.97041,-3.94016 l 4.9306,-34.49783 c 0.3064,-2.16902 -0.41878,-4.35829 -1.97041,-5.90992 -1.55163,-1.55163 -3.74613,-2.28139 -5.92037,-1.97041 l -34.49196,4.92537 c -1.49022,0.21429 -2.87852,0.90876 -3.94016,1.96975 l -92.98422,92.98879 -92.99336,-92.98879 c -1.06164,-1.06164 -2.44994,-1.75546 -3.94016,-1.96975 l -34.49261,-4.92537 c -2.17424,-0.31163 -4.35829,0.41878 -5.90992,1.97041 -1.55163,1.55163 -2.28661,3.74155 -1.97041,5.90992 l 4.9306,34.49783 c 0.20383,1.49022 0.89831,2.87329 1.96975,3.94016 l 92.98356,92.98879 -51.70297,51.69776 -14.78068,-14.78134 c -1.58234,-1.58233 -3.82779,-2.30687 -6.0432,-1.9495 -2.2154,0.35737 -4.11394,1.75612 -5.11417,3.75658 l -9.86054,19.71062 c -1.33734,2.68449 -0.81665,5.93083 1.30664,8.04366 l 17.25153,17.25153 -34.74806,34.7474 c -6.42081,0.0614 -12.45355,2.59302 -16.996078,7.13555 -4.60328,4.60393 -7.14534,10.73925 -7.14534,17.25153 0,6.51228 2.54206,12.63779 7.14534,17.24173 4.603938,4.61373 10.728798,7.146 17.251528,7.146 6.51293,0 12.63714,-2.53161 17.24108,-7.146 4.6856,-4.6856 7.06368,-10.82026 7.12509,-16.97583 l 34.75785,-34.7572 17.25153,17.24042 c 1.33734,1.33734 3.12351,2.04162 4.92994,2.04162 1.06164,0 2.12329,-0.23454 3.11372,-0.73498 l 19.71127,-9.85074 c 2.00046,-1.01068 3.39922,-2.90923 3.76638,-5.12332 0.35737,-2.20495 -0.36716,-4.46086 -1.95995,-6.0432 l -14.78068,-14.78133 51.70297,-51.70298 51.69253,51.70298 -14.78068,14.78133 c -1.58234,1.58234 -2.30687,3.83825 -1.9495,6.0432 0.35736,2.21409 1.75612,4.11264 3.75658,5.12332 l 19.71062,9.85074 c 1.00023,0.50044 2.06187,0.73498 3.12352,0.73498 1.80708,0 3.58279,-0.70428 4.93059,-2.04162 l 17.24173,-17.24042 34.7572,34.7572 c 0.0712,6.15557 2.43949,12.29023 7.12509,16.97583 4.61374,4.61373 10.73925,7.146 17.25153,7.146 l 0,0 c 6.51294,0 12.63714,-2.53161 17.24108,-7.146 9.51232,-9.50383 9.51232,-24.97964 -0.001,-34.49326 z\"\n        />\n        <path d=\"m 416.10981,367.67538 c -4.54252,-4.54253 -10.56481,-7.07414 -16.98562,-7.13555 l -34.74806,-34.7474 17.24108,-17.25153 c 2.12328,-2.11283 2.65378,-5.35917 1.30663,-8.04366 l -9.85073,-19.71062 c -1.00023,-2.00046 -2.90923,-3.39921 -5.12398,-3.75658 -2.20495,-0.35737 -4.45041,0.36717 -6.0432,1.9495 l -14.78068,14.78134 -51.69252,-51.69776 92.98356,-92.98879 c 1.06165,-1.06687 1.75612,-2.44994 1.97041,-3.94016 l 4.9306,-34.49783 c 0.3064,-2.16902 -0.41878,-4.35829 -1.97041,-5.90992 -1.55163,-1.55163 -3.74613,-2.28139 -5.92037,-1.97041 l -34.49196,4.92537 c -1.49022,0.21429 -2.87852,0.90876 -3.94016,1.96975 l -92.98422,92.98879 -92.99336,-92.98879 c -1.06164,-1.06164 -2.44994,-1.75546 -3.94016,-1.96975 l -34.49261,-4.92537 c -2.17424,-0.31163 -4.35829,0.41878 -5.90992,1.97041 -1.55163,1.55163 -2.28661,3.74155 -1.97041,5.90992 l 4.9306,34.49783 c 0.20383,1.49022 0.89831,2.87329 1.96975,3.94016 l 92.98356,92.98879 -51.70297,51.69776 -14.78068,-14.78134 c -1.58234,-1.58233 -3.82779,-2.30687 -6.0432,-1.9495 -2.2154,0.35737 -4.11394,1.75612 -5.11417,3.75658 l -9.86054,19.71062 c -1.33734,2.68449 -0.81665,5.93083 1.30664,8.04366 l 17.25153,17.25153 -34.74806,34.7474 c -6.42081,0.0614 -12.45355,2.59302 -16.996078,7.13555 -4.60328,4.60393 -7.14534,10.73925 -7.14534,17.25153 0,6.51228 2.54206,12.63779 7.14534,17.24173 4.603938,4.61373 10.728798,7.146 17.251528,7.146 6.51293,0 12.63714,-2.53161 17.24108,-7.146 4.6856,-4.6856 7.06368,-10.82026 7.12509,-16.97583 l 34.75785,-34.7572 17.25153,17.24042 c 1.33734,1.33734 3.12351,2.04162 4.92994,2.04162 1.06164,0 2.12329,-0.23454 3.11372,-0.73498 l 19.71127,-9.85074 c 2.00046,-1.01068 3.39922,-2.90923 3.76638,-5.12332 0.35737,-2.20495 -0.36716,-4.46086 -1.95995,-6.0432 l -14.78068,-14.78133 51.70297,-51.70298 51.69253,51.70298 -14.78068,14.78133 c -1.58234,1.58234 -2.30687,3.83825 -1.9495,6.0432 0.35736,2.21409 1.75612,4.11264 3.75658,5.12332 l 19.71062,9.85074 c 1.00023,0.50044 2.06187,0.73498 3.12352,0.73498 1.80708,0 3.58279,-0.70428 4.93059,-2.04162 l 17.24173,-17.24042 34.7572,34.7572 c 0.0712,6.15557 2.43949,12.29023 7.12509,16.97583 4.61374,4.61373 10.73925,7.146 17.25153,7.146 l 0,0 c 6.51294,0 12.63714,-2.53161 17.24108,-7.146 9.51232,-9.50383 9.51232,-24.97964 -0.001,-34.49326 z m -34.4926,0 c -0.8369,0.8369 -1.59279,1.72541 -2.28662,2.64398 l -10.03432,-10.03432 4.9306,-4.9306 10.03432,10.03432 c -0.92902,0.69383 -1.80643,1.45952 -2.64398,2.28662 z m -100.97627,-110.83223 4.9306,-4.92472 51.70298,51.70233 -4.86431,4.85385 m -51.76927,-51.63146 51.77271,51.62834 -14.85041,14.8612 -51.70297,-51.70298 4.93059,-4.9306 m -135.69295,-125.83699 -3.28685,-22.99355 22.99812,3.28162 91.33981,91.34504 -4.92014,4.92537 -9.86119,9.85531 -4.9306,4.92994 z m -4.70586,226.81326 c -0.8271,-0.8271 -1.71496,-1.59279 -2.63352,-2.28662 l 10.02386,-10.03432 4.9306,4.9306 -10.03432,10.03432 c -0.69383,-0.91922 -1.44906,-1.80708 -2.28662,-2.64398 z m -9.85008,24.64187 c -1.98021,1.97041 -4.60394,3.06275 -7.39034,3.06275 -2.79686,0 -5.41993,-1.09234 -7.40079,-3.06275 -1.97041,-1.98021 -3.0523,-4.60394 -3.0523,-7.39034 0,-2.79686 1.08189,-5.42059 3.0523,-7.39034 1.98021,-1.98021 4.60328,-3.06276 7.40079,-3.06276 2.78706,0 5.41013,1.0819 7.39034,3.06276 4.07279,4.07279 4.07279,10.70789 0,14.78068 z m 32.02175,-41.8823 -4.92014,-4.93059 9.85074,-9.86119 4.9306,4.93059 z m 43.2608,3.83825 -18.61893,-18.61958 0,-0.0105 -14.78133,-14.78133 0,0 -18.61958,-18.61958 3.27705,-6.57304 12.87233,12.87103 0.0104,0 24.86662,24.87706 17.56773,17.56839 -6.57434,3.2875 z m -6.298,-35.87111 -9.85073,-9.86119 -4.92994,-4.92014 182.46534,-182.46991 22.98832,-3.28162 -3.28685,22.99289 -182.45619,182.46991 z m 81.26434,-51.70298 51.69252,51.70298 m -6.29864,35.87111 -6.57369,-3.28685 12.87168,-12.87233 0.0104,0 29.56267,-29.57312 0,0 12.87168,-12.87103 3.28685,6.57304 -18.61893,18.61958 0,0 -14.79178,14.78133 0,0.0104 -18.61893,18.61893 z m 38.33151,-18.63003 9.86053,9.86119 -4.93059,4.93059 -9.85009,-9.86119 z m 51.74348,56.67408 c -1.97041,1.97041 -4.60394,3.06275 -7.39034,3.06275 l 0,0 c -2.79686,0 -5.42058,-1.09234 -7.39034,-3.06275 -4.07279,-4.07279 -4.07279,-10.70855 0,-14.78134 1.97041,-1.9802 4.59348,-3.06275 7.39034,-3.06275 2.78706,0 5.42058,1.08189 7.39034,3.06275 4.07279,4.07345 4.07279,10.70855 0,14.78134 z\" />\n      </symbol>\n    ),\n    fm11: color => (\n      <symbol key=\"fm11\" id=\"fm11\" viewBox=\"0 0 52 56\">\n        <path d=\"M26 22c0-1.656-1.344-3-3-3s-3 1.344-3 3c0 0.453 0.109 0.891 0.297 1.297-0.406-0.187-0.844-0.297-1.297-0.297-1.656 0-3 1.344-3 3s1.344 3 3 3 3-1.344 3-3c0-0.453-0.109-0.891-0.297-1.297 0.406 0.187 0.844 0.297 1.297 0.297 1.656 0 3-1.344 3-3zM39.297 33c0 0.359-1.437 1.797-1.797 1.797-0.406 0-1.672-1.469-2-1.797l-1.5 1.5 3.437 3.437c0.281 0.281 0.438 0.672 0.438 1.062 0 0.875-1 1.875-1.875 1.875-0.391 0-0.781-0.156-1.062-0.438l-10.484-10.484c-1.641 1.219-3.641 2.047-5.703 2.047-3.406 0-5.75-2.359-5.75-5.75 0-5.125 5.125-10.25 10.25-10.25 3.391 0 5.75 2.344 5.75 5.75 0 2.063-0.828 4.062-2.047 5.703l5.547 5.547 1.5-1.5c-0.328-0.328-1.797-1.594-1.797-2 0-0.359 1.437-1.797 1.797-1.797 0.125 0 0.266 0.063 0.359 0.156 0.578 0.578 4.937 4.688 4.937 5.141z\" />\n      </symbol>\n    ),\n    fm12: color => (\n      <symbol key=\"fm12\" id=\"fm12\" viewBox=\"0 0 38 38\">\n        <path d=\"M19 7c3.31 0 6.291 1.353 8.459 3.522l2.48-2.48 1.061 7.341-7.437-.966 2.489-2.489c-1.808-1.807-4.299-2.928-7.052-2.928-5.514 0-10 4.486-10 10s4.486 10 10 10c3.872 0 7.229-2.216 8.89-5.443l1.717 1.046c-2.012 3.803-6.005 6.397-10.607 6.397-6.627 0-12-5.373-12-12s5.373-12 12-12z\" />\n      </symbol>\n    ),\n    fm13: color => (\n      <symbol key=\"fm13\" id=\"fm13\" viewBox=\"0 0 25 25\">\n        <g fill=\"none\" stroke=\"black\">\n          <g strokeDasharray=\"1 1\">\n            <line x1=\"5\" y1=\"4\" x2=\"19\" y2=\"4\" />\n            <line x1=\"4\" y1=\"5\" x2=\"4\" y2=\"19\" />\n            <line x1=\"5\" y1=\"20\" x2=\"19\" y2=\"20\" />\n            <line x1=\"20\" y1=\"5\" x2=\"20\" y2=\"19\" />\n            <rect x=\"7\" y=\"7\" width=\"10\" height=\"10\" />\n            <rect x=\"10\" y=\"10\" width=\"4\" height=\"4\" />\n          </g>\n          <rect x=\"5\" y=\"5\" width=\"14\" height=\"14\" />\n          <rect x=\"8\" y=\"8\" width=\"8\" height=\"8\" />\n          <rect x=\"11\" y=\"11\" width=\"2\" height=\"2\" />\n        </g>\n      </symbol>\n    ),\n    fm14: color => (\n      <symbol key=\"fm14\" id=\"fm14\" viewBox=\"0 0 23 23\">\n        <g stroke=\"black\" strokeWidth=\"0.5\">\n          <rect\n            fill=\"#b3b3b3\"\n            x=\"6\"\n            y=\"6\"\n            width=\"10\"\n            height=\"10\"\n            rx=\"3\"\n            ry=\"3\"\n          />\n          <rect x=\"9\" y=\"9\" width=\"4\" height=\"4\" />\n          <rect x=\"6\" y=\"10\" width=\"10\" height=\"2\" />\n          <rect x=\"10\" y=\"6\" width=\"2\" height=\"10\" />\n          <rect x=\"10\" y=\"10\" width=\"3\" height=\"3\" />\n          <g stroke=\"white\" strokeWidth=\"1\" strokeLinecap=\"square\">\n            <line x1=\"7\" y1=\"11\" x2=\"9\" y2=\"11\" />\n            <line x1=\"11\" y1=\"7\" x2=\"11\" y2=\"9\" />\n            <line x1=\"13\" y1=\"11\" x2=\"15\" y2=\"11\" />\n            <line x1=\"11\" y1=\"13\" x2=\"11\" y2=\"15\" />\n          </g>\n        </g>\n      </symbol>\n    ),\n    fm15: color => (\n      <symbol key=\"fm15\" id=\"fm15\" viewBox=\"0 0 128 128\">\n        <path\n          d=\"M64,98.897c0,0-25.304,0-28.461,0c-3.158,0-4.077-3.163-2.938-4.586c1.14-1.424,17.592-20.068,17.592-20.068s-9.01,0-10.59,0   c-3.114,0-3.953-2.866-2.363-4.638c1.28-1.428,18.049-20.277,18.049-20.277s-6.645,0-8.677,0c-2.033,0-3.392-2.665-1.903-4.443   c1.488-1.778,16.955-19.173,16.955-19.173s0.665-1.045,2.287-1.045s2.385,1.045,2.385,1.045s15.467,17.395,16.955,19.173   c1.488,1.779,0.13,4.443-1.903,4.443c-2.032,0-8.677,0-8.677,0S89.479,68.178,90.76,69.605c1.59,1.771,0.751,4.638-2.363,4.638   c-1.58,0-10.59,0-10.59,0s16.452,18.645,17.592,20.068c1.14,1.423,0.221,4.586-2.938,4.586C89.304,98.897,64,98.897,64,98.897\"\n          fill=\"none\"\n          stroke=\"#231F20\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit=\"10\"\n          strokeWidth=\"5\"\n        />\n        <path\n          d=\"M55.176,98.897v6.965c0,0,0.04,2.638,2.788,2.638s8.286,0,11.034,0s2.788-2.638,2.788-2.638v-6.965\"\n          fill=\"none\"\n          stroke=\"#231F20\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit=\"10\"\n          strokeWidth=\"5\"\n        />\n      </symbol>\n    ),\n    fm16: color => (\n      <symbol key=\"fm16\" id=\"fm16\" viewBox=\"0 0 23 23\">\n        <g stroke=\"black\" strokeWidth=\"1\">\n          <polygon points=\"6,11 11,6 16,11 16,17 6,17\" />\n          <g strokeLinecap=\"round\" strokeWidth=\"1.5\">\n            <line x1=\"5\" y1=\"11\" x2=\"11\" y2=\"5\" />\n            <line x1=\"11\" y1=\"5\" x2=\"17\" y2=\"11\" />\n          </g>\n          <rect x=\"14\" y=\"5\" width=\"1\" height=\"3\" fill=\"black\" />\n          <g stroke=\"white\">\n            <g strokeLinecap=\"round\">\n              <line x1=\"6\" y1=\"11\" x2=\"11\" y2=\"6\" />\n              <line x1=\"11\" y1=\"6\" x2=\"16\" y2=\"11\" />\n            </g>\n            <polygon fill=\"white\" points=\"11,11 10,12 10,15 12,15 12,12\" />\n          </g>\n        </g>\n      </symbol>\n    ),\n    w1v: color => (\n      <symbol key=\"w1v\" id=\"w1v\" viewBox=\"0 0 26 26\">\n        <line\n          x1=\"13\"\n          y1=\"0\"\n          x2=\"13\"\n          y2=\"26\"\n          stroke=\"black\"\n          strokeWidth=\"1.5\"\n          strokeLinecap=\"square\"\n        />\n      </symbol>\n    ),\n    w2v: color => (\n      <symbol key=\"w2v\" id=\"w2v\" viewBox=\"0 0 26 26\">\n        <g\n          stroke=\"black\"\n          strokeWidth=\"1.5\"\n          strokeLinecap=\"square\"\n          vectorEffect=\"non-scaling-stroke\"\n        >\n          <rect\n            x=\"11.5\"\n            y=\"4\"\n            width=\"3\"\n            height=\"18\"\n            fill=\"white\"\n            strokeWidth=\"0.5\"\n            vectorEffect=\"non-scaling-stroke\"\n          />\n          <line x1=\"13\" y1=\"0\" x2=\"13\" y2=\"4\" />\n          <line x1=\"11.5\" y1=\"4\" x2=\"14.4\" y2=\"4\" />\n          <line x1=\"11.5\" y1=\"22\" x2=\"14.4\" y2=\"22\" />\n          <line x1=\"13\" y1=\"22\" x2=\"13\" y2=\"26\" />\n        </g>\n      </symbol>\n    ),\n    w3v: color => (\n      <symbol key=\"w3v\" id=\"w3v\" viewBox=\"0 0 26 26\">\n        <g stroke=\"black\" strokeWidth=\"1.5\" strokeLinecap=\"square\">\n          <line x1=\"13\" y1=\"0\" x2=\"13\" y2=\"26\" />\n          <line x1=\"11\" y1=\"5\" x2=\"15\" y2=\"5\" />\n          <line x1=\"11\" y1=\"21\" x2=\"15\" y2=\"21\" />\n        </g>\n      </symbol>\n    ),\n    w4v: color => (\n      <symbol key=\"w4v\" id=\"w4v\" viewBox=\"0 0 26 26\">\n        <line\n          x1=\"13\"\n          y1=\"0\"\n          x2=\"13\"\n          y2=\"26\"\n          strokeDasharray=\"4.333333333333333 4.333333333333333\"\n          stroke=\"black\"\n          strokeWidth=\"1.5\"\n          strokeLinecap=\"square\"\n        />\n      </symbol>\n    ),\n    w5v: color => (\n      <symbol key=\"w5v\" id=\"w5v\" viewBox=\"0 0 26 26\">\n        <g stroke=\"black\" strokeWidth=\"1.5\" strokeLinecap=\"square\">\n          <line x1=\"13\" y1=\"0\" x2=\"13\" y2=\"26\" />\n          <path d=\"M13 5 C 18 5, 18 19, 13 19\" fill=\"white\" />\n        </g>\n      </symbol>\n    ),\n    w6v: color => (\n      <symbol key=\"w6v\" id=\"w6v\" viewBox=\"0 0 26 26\">\n        <g stroke=\"black\" strokeWidth=\"1.5\" strokeLinecap=\"square\">\n          <line x1=\"13\" y1=\"0\" x2=\"13\" y2=\"26\" />\n          <path d=\"M13 5 C 8 5, 8 19, 13 19\" fill=\"white\" />\n        </g>\n      </symbol>\n    ),\n    w7v: color => (\n      <symbol key=\"w7v\" id=\"w7v\" viewBox=\"0 0 26 26\">\n        <g stroke=\"black\" strokeWidth=\"1.5\" strokeLinecap=\"square\">\n          <line x1=\"13\" y1=\"0\" x2=\"13\" y2=\"5\" />\n          <line x1=\"11\" y1=\"5\" x2=\"15\" y2=\"5\" />\n          <line x1=\"11\" y1=\"21\" x2=\"15\" y2=\"21\" />\n          <line x1=\"13\" y1=\"21\" x2=\"13\" y2=\"26\" />\n        </g>\n      </symbol>\n    ),\n    wm1v: color => (\n      <symbol key=\"wm1v\" id=\"wm1v\" viewBox=\"0 0 14 14\">\n        <g stroke=\"black\" strokeWidth=\"0.5\" strokeLinecap=\"square\">\n          <line x1=\"5\" y1=\"5\" x2=\"9\" y2=\"9\" />\n          <line x1=\"9\" y1=\"5\" x2=\"5\" y2=\"9\" />\n        </g>\n      </symbol>\n    ),\n    wm2v: color => (\n      <symbol key=\"wm2v\" id=\"wm2v\" viewBox=\"0 0 14 14\">\n        <line\n          x1=\"4\"\n          y1=\"7\"\n          x2=\"9\"\n          y2=\"7\"\n          stroke=\"black\"\n          strokeWidth=\"0.5\"\n          strokeLinecap=\"square\"\n        />\n        <polygon points=\"9,6 9,8 10,7\" />\n      </symbol>\n    ),\n    wm3v: color => (\n      <symbol key=\"wm3v\" id=\"wm3v\" viewBox=\"0 0 14 14\">\n        <line\n          x1=\"4\"\n          y1=\"7\"\n          x2=\"9\"\n          y2=\"7\"\n          stroke=\"black\"\n          strokeWidth=\"0.5\"\n          strokeLinecap=\"square\"\n        />\n        <polygon points=\"4,6 4,8 3,7\" />\n      </symbol>\n    ),\n    wm4v: color => (\n      <symbol key=\"wm4v\" id=\"wm4v\" viewBox=\"0 0 30 30\">\n        <g stroke=\"black\" strokeWidth=\"1\">\n          <line x1=\"10\" y1=\"15\" x2=\"20\" y2=\"4\" />\n          <line x1=\"10\" y1=\"20\" x2=\"20\" y2=\"9\" />\n          <line x1=\"10\" y1=\"25\" x2=\"20\" y2=\"14\" />\n        </g>\n      </symbol>\n    ),\n    wm5v: color => (\n      <symbol key=\"wm5v\" id=\"wm5v\" viewBox=\"0 0 14 14\">\n        <rect\n          x=\"6\"\n          y=\"11\"\n          width=\"1\"\n          height=\"1\"\n          fill=\"white\"\n          stroke=\"black\"\n          strokeWidth=\"0.5\"\n        />\n      </symbol>\n    ),\n    wm6v: color => (\n      <symbol key=\"wm6v\" id=\"wm6v\" viewBox=\"0 0 14 14\">\n        <rect\n          x=\"7\"\n          y=\"11\"\n          width=\"1\"\n          height=\"1\"\n          fill=\"white\"\n          stroke=\"black\"\n          strokeWidth=\"0.5\"\n        />\n      </symbol>\n    ),\n    wm7v: color => (\n      <symbol key=\"wm7v\" id=\"wm7v\" viewBox=\"0 0 96 96\">\n        <rect\n          x=\"36\"\n          y=\"36\"\n          width=\"24\"\n          height=\"24\"\n          fill=\"white\"\n          stroke=\"black\"\n          strokeWidth=\"3\"\n          strokeLinejoin=\"round\"\n          rx=\"4\"\n          ry=\"4\"\n        />\n        <g stroke=\"black\" strokeWidth=\"1.5\" strokeLinecap=\"square\">\n          <line x1=\"39\" y1=\"48\" x2=\"45\" y2=\"48\" />\n          <line x1=\"48\" y1=\"39\" x2=\"48\" y2=\"45\" />\n          <line x1=\"57\" y1=\"48\" x2=\"51\" y2=\"48\" />\n          <line x1=\"48\" y1=\"57\" x2=\"48\" y2=\"51\" />\n        </g>\n      </symbol>\n    ),\n    wm8v: color => (\n      <symbol key=\"wm8v\" id=\"wm8v\" viewBox=\"0 0 30 30\">\n        <g stroke=\"black\">\n          <path d=\"M15 9 C 10 9, 10 21, 15 21\" strokeWidth=\"1.5\" fill=\"white\" />\n          <line x1=\"15\" y1=\"9\" x2=\"15\" y2=\"21\" />\n        </g>\n      </symbol>\n    ),\n    wm9v: color => (\n      <symbol key=\"wm9v\" id=\"wm9v\" viewBox=\"0 0 30 30\">\n        <g stroke=\"black\">\n          <path d=\"M16 9 C 21 9, 21 21, 16 21\" strokeWidth=\"1.5\" fill=\"white\" />\n          <line x1=\"16\" y1=\"9\" x2=\"16\" y2=\"21\" />\n        </g>\n      </symbol>\n    ),\n    ln3: color => (\n      <symbol key=\"ln3\" id=\"ln3\" viewBox=\"0 0 12 12\">\n        <text\n          x=\"1\"\n          y=\"7\"\n          style={{\n            font: '4px sans-serif',\n          }}\n          fill=\"black\"\n        >\n          Text\n        </text>\n      </symbol>\n    ),\n  },\n};\n","/* Color themes */\nexport default {\n  'default (dark)': {\n    background: '#252525',\n    deadCell: '#373737',\n    aliveCell: '#007300',\n    cellText: '#000',\n    cellGraphText: '#fff',\n    footerText: '#fff',\n    controlsBackground: 'rgba(0,0,0,.75)',\n    optionsMenuBackground: 'rgba(0,0,0,1)',\n    buttonHoverBackground: '#252525',\n    controlsText: '#fff',\n    controlsBorder: '#444',\n  },\n\n  'default (light)': {\n    background: '#eee',\n    deadCell: '#ddd',\n    aliveCell: '#59d459',\n    cellText: '#555',\n    cellGraphText: '#000',\n    footerText: '#000',\n    controlsBackground: 'rgba(255,255,255,.9)',\n    optionsMenuBackground: 'rgba(255,255,255,1)',\n    buttonHoverBackground: '#eee',\n    controlsText: '#444',\n    controlsBorder: '#bbb',\n  },\n};\n","import defaultConfig from './defaultConfig';\nimport colorThemes from '../config/colorThemes';\n\nexport default {\n  save: configToSave => {\n    let savedConfig = localStorage.getItem('savedConfig');\n    let newConfig = savedConfig ? JSON.parse(savedConfig) : {};\n    Object.assign(newConfig, configToSave);\n    localStorage.setItem('savedConfig', JSON.stringify(newConfig));\n  },\n\n  get: () => ({\n    ...defaultConfig,\n    ...JSON.parse(localStorage.getItem('savedConfig')),\n  }),\n\n  getModalStyle: theme => ({\n    overlay: defaultConfig.modalStyle.overlay,\n    content: {\n      ...defaultConfig.modalStyle.content,\n      ...{\n        background: colorThemes[theme].controlsBackground,\n        color: colorThemes[theme].footerText,\n        borderColor: colorThemes[theme].footerText,\n      },\n    },\n  }),\n};\n","let notif;\nconst displayNotification = options =>\n  notif.addNotification({\n    title: options.title,\n    message: options.message,\n    position: options.position || 'bc',\n    level: options.level || 'info',\n    autoDismiss: options.autoDismiss || 4,\n    action: options.action || null,\n  });\n\nexport default {\n  init: notificationSystem => (notif = notificationSystem),\n\n  clearAll: () => notif.clearNotifications(),\n\n  /* APP */\n  cellSizeChanged: () =>\n    displayNotification({\n      title: 'Cell size changed',\n      message: 'The cell size has changed to adapt to the grid size.',\n    }),\n\n  gridLoadedAndSaved: () =>\n    displayNotification({\n      title: 'Grid loaded',\n      message:\n        'The grid has been successfully loaded and saved in your grid library.',\n      level: 'success',\n      autoDismiss: 6,\n    }),\n\n  cellSizeTooBig: () =>\n    displayNotification({\n      title: 'Cell is too big',\n      message: 'Please reduce the cell size.',\n      level: 'error',\n    }),\n\n  /* CONTROLS */\n  cantSaveBrush: message =>\n    displayNotification({\n      title: \"Can't save brush\",\n      message,\n      level: 'warning',\n      autoDismiss: 6,\n    }),\n\n  /* MANAGE BRUSH MODAL */\n  brushSuccessfullyLoaded: () =>\n    displayNotification({\n      title: 'Brush successfully loaded',\n      message: 'The brush has been successfully loaded in the grid.',\n      level: 'success',\n    }),\n\n  brushLinkCopied: () =>\n    displayNotification({\n      title: 'Brush link copied',\n      message: 'The brush link has been copied into your clipboard.',\n      level: 'success',\n    }),\n\n  brushLinkNotCopied: error =>\n    displayNotification({\n      title: \"Brush link can't be copied\",\n      message: `Error while copying the brush link into your clipboard. Error: ${error}`,\n      level: 'error',\n    }),\n\n  /* IMPORT BRUSH MODAL */\n  wrongBrushExportString: () =>\n    displayNotification({\n      title: 'Wrong brush export string',\n      message: 'The brush export string you have entered is invalid.',\n      level: 'error',\n    }),\n\n  brushAlreadyExists: brushName =>\n    displayNotification({\n      title: 'This brush already exists',\n      message: `The brush you trying to import already exists with the name: ${brushName}.`,\n      level: 'warning',\n    }),\n\n  brushSuccessfullyImported: brushName =>\n    displayNotification({\n      title: 'Brush successfully imported',\n      message:\n        'The brush has been successfully imported and saved in your custom brush library.',\n      level: 'success',\n    }),\n\n  /* MANAGE GRID MODAL */\n  gridSuccessfullyLoaded: () =>\n    displayNotification({\n      title: 'Grid successfully loaded',\n      message: 'The grid has been successfully loaded.',\n      level: 'success',\n    }),\n\n  gridLinkCopied: () =>\n    displayNotification({\n      title: 'Grid link copied',\n      message: 'The grid link has been copied into your clipboard.',\n      level: 'success',\n    }),\n\n  gridLinkNotCopied: error =>\n    displayNotification({\n      title: \"Grid link can't be copied\",\n      message: `Error while copying the grid link into your clipboard. Error: ${error}`,\n      level: 'error',\n    }),\n\n  /* IMPORT GRID MODAL */\n  wrongGridExportString: () =>\n    displayNotification({\n      title: 'Wrong grid export string',\n      message: 'The grid export string you have entered is invalid.',\n      level: 'error',\n    }),\n\n  gridAlreadyExists: gridName =>\n    displayNotification({\n      title: 'This grid already exists',\n      message: `The grid you trying to import already exists with the name: ${gridName}.`,\n      level: 'warning',\n    }),\n\n  gridSuccessfullyImported: gridName =>\n    displayNotification({\n      title: 'Grid successfully imported',\n      message:\n        'The grid has been successfully imported and saved in your grid library.',\n      level: 'success',\n    }),\n};\n","import React, { Component } from 'react';\n\nexport default class Checkbox extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.props.handleChange(event);\n  }\n\n  render() {\n    return (\n      <div className=\"checkbox-wrapper\">\n        <input\n          type=\"checkbox\"\n          id={this.props.id}\n          onChange={this.handleChange}\n          disabled={this.props.isDisabled}\n          checked={this.props.isChecked}\n        />\n        <label\n          htmlFor={this.props.id}\n          title={this.props.title ? this.props.title : null}\n        >\n          <span className=\"checkbox-icon\" />\n          <span className=\"label-text\">{this.props.label}</span>\n        </label>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class Select extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.props.handleChange(event, this.props.type);\n  }\n\n  render() {\n    return (\n      <div className=\"input-block select-wrapper\">\n        <label className=\"input-label\">\n          <span>{this.props.label}</span>\n          <select\n            className=\"input-style\"\n            value={this.props.defaultValue}\n            onChange={this.handleChange}\n          >\n            {this.props.options.map((el, index) => {\n              return (\n                <option key={index} value={el[0]}>\n                  {el[1]}\n                </option>\n              );\n            })}\n          </select>\n        </label>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\n\nclass Cell extends PureComponent {\n  render() {\n    const { index, xPos, yPos, size, content } = this.props;\n    if (content === undefined) return null;\n    const halfSize = size / 2;\n    const x0 = xPos + halfSize;\n    const y0 = yPos + halfSize;\n    return (\n      <g>\n        {content.center ? (\n          <use\n            data-index={index}\n            x={xPos}\n            y={yPos}\n            width={size}\n            height={size}\n            href={`#${content.center}`}\n          />\n        ) : (\n          [\n            content.top ? (\n              <use\n                key=\"top\"\n                data-index={index}\n                x={xPos}\n                y={yPos - halfSize}\n                width={size}\n                height={size}\n                href={`#${content.top}`}\n                style={{\n                  transform: 'rotate(90deg)',\n                  transformOrigin: `${x0}px ${y0 - halfSize}px`,\n                }}\n              />\n            ) : null,\n            content.bottom ? (\n              <use\n                key=\"bottom\"\n                data-index={index}\n                x={xPos}\n                y={yPos + halfSize}\n                width={size}\n                height={size}\n                href={`#${content.bottom}`}\n                style={{\n                  transform: 'rotate(90deg)',\n                  transformOrigin: `${x0}px ${y0 + halfSize}px`,\n                }}\n              />\n            ) : null,\n            content.left ? (\n              <use\n                key=\"left\"\n                data-index={index}\n                x={xPos - halfSize}\n                y={yPos}\n                width={size}\n                height={size}\n                href={`#${content.left}`}\n              />\n            ) : null,\n            content.right ? (\n              <use\n                key=\"right\"\n                data-index={index}\n                x={xPos + halfSize}\n                y={yPos}\n                width={size}\n                height={size}\n                href={`#${content.right}`}\n              />\n            ) : null,\n            content.diag1 ? (\n              <use\n                key=\"diag1\"\n                data-index={index}\n                x={xPos}\n                y={yPos}\n                width={size}\n                height={size}\n                href={`#${content.diag1}`}\n                style={{\n                  transform: 'rotate(-45deg) scale(1, 1.4142135623730951)',\n                  transformOrigin: `${x0}px ${y0}px`,\n                }}\n              />\n            ) : null,\n            content.diag2 ? (\n              <use\n                key=\"diag2\"\n                data-index={index}\n                x={xPos}\n                y={yPos}\n                width={size}\n                height={size}\n                href={`#${content.diag2}`}\n                style={{\n                  transform: 'rotate(45deg) scale(1, 1.4142135623730951)',\n                  transformOrigin: `${x0}px ${y0}px`,\n                }}\n              />\n            ) : null,\n          ]\n        )}\n      </g>\n    );\n  }\n}\n\nexport default Cell;\n","const gridsHandler = {\n  saveUserGrid: options => {\n    let userGrids = gridsHandler.getUserGrids();\n    let newUserGrids = userGrids ? userGrids : {};\n    newUserGrids[options.name] = options;\n    const exportString = gridsHandler.encodeGridExportString(\n      newUserGrids[options.name]\n    );\n    newUserGrids[options.name].exportString = exportString;\n    localStorage.setItem('userGrids', JSON.stringify(newUserGrids));\n  },\n\n  importUserGrid: (gridData, gridExportString) => {\n    let userGrids = gridsHandler.getUserGrids();\n    let newUserGrids = userGrids ? userGrids : {};\n    newUserGrids[gridData.name] = gridData;\n    newUserGrids[gridData.name].exportString = gridExportString;\n    localStorage.setItem('userGrids', JSON.stringify(newUserGrids));\n  },\n\n  // Generate a grid export string by encoding grid data to a base64 string\n  encodeGridExportString: gridData =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(gridData)))),\n\n  decodeGridExportString: exportString => {\n    try {\n      return JSON.parse(decodeURIComponent(escape(atob(exportString))));\n    } catch (e) {\n      // If corrupted Base64 string, return undefined\n      return undefined;\n    }\n  },\n\n  loadUserGrid: name => {\n    const userGrids = gridsHandler.getUserGrids();\n    return userGrids ? userGrids[name] : null;\n  },\n\n  deleteUserGrid: name => {\n    const userGrids = gridsHandler.getUserGrids();\n    // If only one grid delete userGrids from localStorage\n    if (Object.keys(userGrids).length === 1) {\n      localStorage.removeItem('userGrids');\n      return 'noGridLeft';\n    }\n    delete userGrids[name];\n    localStorage.setItem('userGrids', JSON.stringify(userGrids));\n  },\n\n  doesImportGridAlreadyExist: gridExportString => {\n    const userGrids = gridsHandler.getUserGrids();\n    for (let grid in userGrids) {\n      if (userGrids[grid].exportString === gridExportString) {\n        return userGrids[grid].name;\n      }\n    }\n    return false;\n  },\n\n  getUserGrids: () => JSON.parse(localStorage.getItem('userGrids')),\n\n  getUserGridsNames: () => {\n    const userGrids = gridsHandler.getUserGrids();\n    if (userGrids) {\n      let userGridsNames = Object.keys(userGrids);\n      userGridsNames.unshift('Load a grid');\n      return userGridsNames;\n    }\n    return null;\n  },\n};\n\nexport default gridsHandler;\n","import React, { Component } from 'react';\nimport ReactModal from 'react-modal';\n\nexport default class ResetGridModal extends Component {\n  constructor(props) {\n    super(props);\n    this.handleShowModal = this.handleShowModal.bind(this);\n    this.resetGrid = this.resetGrid.bind(this);\n  }\n\n  handleShowModal() {\n    this.props.handleShowModal();\n  }\n\n  resetGrid(event) {\n    event.preventDefault();\n    this.props.resetGrid();\n    this.props.handleShowModal();\n  }\n\n  render() {\n    return (\n      <div>\n        <ReactModal\n          isOpen={this.props.showModal}\n          contentLabel=\"onRequestClose Example\"\n          onRequestClose={this.handleShowModal}\n          style={this.props.modalStyle}\n          className={{\n            base: 'modal',\n            afterOpen: 'modal-opened',\n            beforeClose: 'modal-closed',\n          }}\n        >\n          <h2>Reset the grid</h2>\n          <form onSubmit={this.resetGrid}>\n            <p>Are you sure you want to reset the grid?</p>\n            <input\n              type=\"submit\"\n              className=\"input-style small-cta\"\n              value=\"Yes\"\n            />\n          </form>\n          <button\n            className=\"input-style small-cta\"\n            onClick={this.handleShowModal}\n          >\n            No\n          </button>\n        </ReactModal>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport ReactModal from 'react-modal';\n\nexport default class SaveGridModal extends Component {\n  constructor(props) {\n    super(props);\n    this.handleShowModal = this.handleShowModal.bind(this);\n    this.importGrid = this.importGrid.bind(this);\n  }\n\n  handleShowModal() {\n    this.props.handleShowModal();\n  }\n\n  importGrid(event) {\n    event.preventDefault();\n    this.props.importGrid(this.gridImportInput.value);\n  }\n\n  render() {\n    return (\n      <div>\n        <ReactModal\n          isOpen={this.props.showModal}\n          contentLabel=\"onRequestClose Example\"\n          onRequestClose={this.handleShowModal}\n          style={this.props.modalStyle}\n          className={{\n            base: 'modal import-grid-modal',\n            afterOpen: 'modal-opened',\n            beforeClose: 'modal-closed',\n          }}\n        >\n          <h2>Import a grid</h2>\n          <form onSubmit={this.importGrid}>\n            <p>Paste the grid export string below.</p>\n            <input\n              className=\"input-style\"\n              type=\"text\"\n              placeholder=\"Paste grid export string here\"\n              ref={input => (this.gridImportInput = input)}\n            />\n            <input\n              type=\"submit\"\n              className=\"input-style small-cta\"\n              value=\"Import grid\"\n            />\n          </form>\n          <button\n            className=\"input-style small-cta\"\n            onClick={this.handleShowModal}\n          >\n            Close\n          </button>\n        </ReactModal>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport ReactModal from 'react-modal';\nimport config from '../../config/configHandler';\nconst configData = config.get();\n\nclass DownloadGridModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      downloadFormat: configData.downloadFormat,\n      filename: null,\n    };\n    this.handleShowModal = this.handleShowModal.bind(this);\n    this.downloadGrid = this.downloadGrid.bind(this);\n    this.handleFormatChange = this.handleFormatChange.bind(this);\n    this.handleFilenameChange = this.handleFilenameChange.bind(this);\n  }\n\n  handleShowModal() {\n    this.props.handleShowModal();\n  }\n\n  downloadGrid(event) {\n    event.preventDefault();\n    this.props.downloadGrid(\n      this.state.downloadFormat,\n      this.gridDownloadInput.value\n    );\n  }\n\n  handleFormatChange(event) {\n    const format = event.target.value;\n    const filename = this.gridDownloadInput.value;\n    this.setState(\n      prevState => ({\n        filename: filename.replace(/\\.[^/.]+$/, `.${format}`),\n        downloadFormat: format,\n      }),\n      () => {\n        config.save({ downloadFormat: format });\n      }\n    );\n  }\n\n  handleFilenameChange(event) {\n    this.setState({\n      filename: event.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <ReactModal\n          isOpen={this.props.showModal}\n          contentLabel=\"onRequestClose Example\"\n          onRequestClose={this.handleShowModal}\n          style={this.props.modalStyle}\n          className={{\n            base: 'modal download-grid-modal',\n            afterOpen: 'modal-opened',\n            beforeClose: 'modal-closed',\n          }}\n        >\n          <h2>Download the grid</h2>\n          <form onSubmit={this.downloadGrid}>\n            <p>Choose the format to download to:</p>\n            <div>\n              <input\n                type=\"radio\"\n                id=\"svg\"\n                name=\"format\"\n                value=\"svg\"\n                checked={this.state.downloadFormat === 'svg'}\n                onChange={this.handleFormatChange}\n              />\n              <label htmlFor=\"svg\">SVG</label>\n              <input\n                type=\"radio\"\n                id=\"png\"\n                name=\"format\"\n                value=\"png\"\n                onChange={this.handleFormatChange}\n                checked={this.state.downloadFormat === 'png'}\n              />\n              <label htmlFor=\"png\">PNG</label>\n            </div>\n            <p>Choose the filename:</p>\n            <input\n              className=\"input-style\"\n              type=\"text\"\n              name=\"filename\"\n              placeholder=\"Paste filename here\"\n              value={\n                this.state.filename\n                  ? this.state.filename\n                  : `${\n                      this.props.activeGrid.name\n                        ? this.props.activeGrid.name\n                        : 'grid'\n                    }.${configData.downloadFormat}`\n              }\n              onChange={this.handleFilenameChange}\n              ref={input => (this.gridDownloadInput = input)}\n            />\n            <input\n              type=\"submit\"\n              className=\"input-style small-cta\"\n              value=\"Download grid\"\n            />\n          </form>\n          <button\n            className=\"input-style small-cta\"\n            onClick={this.handleShowModal}\n          >\n            Close\n          </button>\n        </ReactModal>\n      </div>\n    );\n  }\n}\n\nexport default DownloadGridModal;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M1943 952q0 31-31 66l-336 396q-43 51-120.5 86.5t-143.5 35.5h-1088q-34 0-60.5-13t-26.5-43q0-31 31-66l336-396q43-51 120.5-86.5t143.5-35.5h1088q34 0 60.5 13t26.5 43zm-343-344v160h-832q-94 0-197 47.5t-164 119.5l-337 396-5 6q0-4-.5-12.5t-.5-12.5v-960q0-92 66-158t158-66h320q92 0 158 66t66 158v32h544q92 0 158 66t66 158z\"\n});\n\nvar SvgIconFolderOpen = function SvgIconFolderOpen(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 14,\n    viewBox: \"0 0 2048 1792\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgIconFolderOpen, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/icon-folder-open.4adfbdc8.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M72,52.9l-41.6-41l41-41.4L52.9-48L11.9-6.4l-41.5-41L-48-29.1l41.6,41.2l-41,41.6L-29.1,72l41.2-41.6 l41.4,41L72,52.9z\"\n});\n\nvar SvgIconCross = function SvgIconCross(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"-48 -48 120 120\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgIconCross, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/icon-cross.ce9fbfc5.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M-17.1-4.4c2.2-2.2,4.6-4,7.2-5.4c14.4-8,32.9-3.7,42.2,10.3L21.2,11.7C17.9,4.4,9.9,0.2,2,2 c-3,0.7-5.8,2.2-8.2,4.5L-27.7,28c-6.5,6.5-6.5,17.2,0,23.7s17.2,6.5,23.7,0l6.6-6.6c6,2.4,12.5,3.4,18.9,2.9L6.9,62.6 c-12.6,12.6-32.9,12.6-45.5,0s-12.6-32.9,0-45.5C-38.6,17.1-17.1-4.4-17.1-4.4z M17.1-38.6L2.5-23.9c6.4-0.5,12.9,0.5,18.9,2.9 l6.6-6.6c6.5-6.5,17.2-6.5,23.7,0s6.5,17.2,0,23.7L30.2,17.5c-6.6,6.6-17.2,6.5-23.7,0C5,16,3.7,14.1,2.8,12.3L-8.4,23.5 c1.2,1.8,2.4,3.3,4,4.9c4.1,4.1,9.2,7.1,15.2,8.5c7.7,1.9,16,0.8,23.1-3.1c2.6-1.4,5-3.2,7.2-5.4L62.6,6.9 c12.6-12.6,12.6-32.9,0-45.5C50-51.1,29.7-51.1,17.1-38.6z\"\n});\n\nvar SvgIconLink = function SvgIconLink(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"-48 -48 120 120\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgIconLink, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/icon-link.99d71274.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Component } from 'react';\nimport ReactModal from 'react-modal';\nimport gridsHandler from '../../gridsHandler';\nimport config from '../../config/configHandler';\nimport notif from '../../notifications';\nimport colorThemes from '../../config/colorThemes';\nimport { ReactComponent as IconFolderOpen } from '../../media/icon-folder-open.svg';\nimport { ReactComponent as IconCross } from '../../media/icon-cross.svg';\nimport { ReactComponent as IconLink } from '../../media/icon-link.svg';\n\nclass ManageGridsModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { displayLinkToCopy: false };\n    this.handleShowModal = this.handleShowModal.bind(this);\n    this.deleteGrid = this.deleteGrid.bind(this);\n    this.loadGrid = this.loadGrid.bind(this);\n    this.copyGridExportString = this.copyGridExportString.bind(this);\n    this.modalStyle = config.get().modalStyle;\n  }\n\n  handleShowModal() {\n    this.props.handleShowModal();\n  }\n\n  deleteGrid(gridName, event) {\n    event.preventDefault();\n    this.props.deleteGrid(gridName);\n  }\n\n  loadGrid(gridName, event) {\n    event.preventDefault();\n    notif.gridSuccessfullyLoaded();\n    this.props.loadGrid('user', gridName);\n  }\n\n  copyGridExportString(exportString, event) {\n    event.preventDefault();\n    this.setState({ displayLinkToCopy: exportString }, () => {\n      this.inputLink.select();\n      try {\n        document.execCommand('copy');\n        notif.gridLinkCopied();\n      } catch (error) {\n        notif.gridLinkNotCopied(error);\n      }\n      this.setState({ displayLinkToCopy: false });\n    });\n  }\n\n  render() {\n    const userGrids = gridsHandler.getUserGrids();\n    const gridsNames = Object.keys(userGrids);\n    return (\n      <div>\n        <ReactModal\n          isOpen={this.props.showModal}\n          contentLabel=\"onRequestClose Example\"\n          onRequestClose={this.handleShowModal}\n          style={this.props.modalStyle}\n          className={{\n            base: 'modal',\n            afterOpen: 'modal-opened',\n            beforeClose: 'modal-closed',\n          }}\n        >\n          <h2>Manage your grids</h2>\n          <ul className=\"grids-list\">\n            {gridsNames.map((gridName, i) => {\n              return (\n                <li key={i}>\n                  <h6 className=\"grid-name\">\n                    {gridName}\n                    <span className=\"grid-size\">\n                      {`[${userGrids[gridName].gridSize[0]}, ${\n                        userGrids[gridName].gridSize[1]\n                      }]`}\n                    </span>\n                  </h6>\n                  <div className=\"actions-wrapper\">\n                    <a\n                      href=\"#delete-grid\"\n                      className=\"action-icon\"\n                      alt=\"Cross icon\"\n                      title=\"Delete the grid.\"\n                      onClick={this.deleteGrid.bind(this, gridName)}\n                    >\n                      <IconCross\n                        fill={colorThemes[this.props.colorTheme].footerText}\n                      />\n                    </a>\n\n                    <a\n                      href=\"#load-grid\"\n                      className=\"action-icon\"\n                      alt=\"Load icon\"\n                      title=\"Load the grid.\"\n                      onClick={this.loadGrid.bind(this, gridName)}\n                    >\n                      <IconFolderOpen\n                        fill={colorThemes[this.props.colorTheme].footerText}\n                      />\n                    </a>\n\n                    <a\n                      href=\"#copy-link\"\n                      className=\"action-icon\"\n                      alt=\"Link icon\"\n                      title=\"Copy the URL of the grid in your clipboard to share it.\"\n                      onClick={this.copyGridExportString.bind(\n                        this,\n                        userGrids[gridName].exportString\n                      )}\n                    >\n                      <IconLink\n                        fill={colorThemes[this.props.colorTheme].footerText}\n                      />\n                    </a>\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n\n          {// Temporary input to select grid link and copy it programmatically\n          this.state.displayLinkToCopy ? (\n            <input\n              type=\"text\"\n              readOnly=\"true\"\n              value={this.state.displayLinkToCopy}\n              ref={inputLink => {\n                this.inputLink = inputLink;\n              }}\n            />\n          ) : (\n            ''\n          )}\n\n          <button\n            className=\"input-style small-cta\"\n            onClick={this.handleShowModal}\n          >\n            Close\n          </button>\n        </ReactModal>\n      </div>\n    );\n  }\n}\n\nexport default ManageGridsModal;\n","import React, { Component } from 'react';\nimport ReactModal from 'react-modal';\n\nexport default class SaveGridModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: null,\n    };\n    this.handleShowModal = this.handleShowModal.bind(this);\n    this.saveGrid = this.saveGrid.bind(this);\n    this.selectLink = this.selectLink.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n  }\n\n  handleShowModal() {\n    this.props.handleShowModal();\n  }\n\n  saveGrid(event) {\n    event.preventDefault();\n    this.props.saveGrid(this.gridNameInput.value);\n  }\n\n  selectLink(event) {\n    this.gridNameLink.setSelectionRange(0, this.gridNameLink.value.length);\n  }\n\n  handleNameChange(event) {\n    this.setState({\n      name: event.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <ReactModal\n          isOpen={this.props.showModal}\n          contentLabel=\"onRequestClose Example\"\n          onRequestClose={this.handleShowModal}\n          style={this.props.modalStyle}\n          className={{\n            base: 'modal',\n            afterOpen: 'modal-opened',\n            beforeClose: 'modal-closed',\n          }}\n        >\n          <h2>Save & share your grid</h2>\n          {// Display save grid form if not saved yet\n          !this.props.activeGrid.name || !this.props.activeGrid.exportString ? (\n            <form onSubmit={this.saveGrid}>\n              <p>\n                To save your grid,\n                <br />\n                you need to give it a name.\n              </p>\n              <input\n                className=\"input-style\"\n                type=\"text\"\n                placeholder=\"Grid name\"\n                maxLength={30}\n                ref={input => (this.gridNameInput = input)}\n                value={\n                  this.state.name\n                    ? this.state.name\n                    : this.props.activeGrid.name\n                    ? this.props.activeGrid.name\n                    : ''\n                }\n                onChange={this.handleNameChange}\n              />\n              <input\n                type=\"submit\"\n                className=\"input-style small-cta\"\n                value=\"Save grid\"\n              />\n            </form>\n          ) : (\n            // Display saved notif and grid export string in a read-only input\n            <div>\n              <p className=\"green-notification\">✓ Grid saved</p>\n              <p>Share this grid by sending the grid export string below:</p>\n              <input\n                className=\"input-style share-link-input\"\n                type=\"text\"\n                readOnly=\"true\"\n                ref={input => (this.gridNameLink = input)}\n                onClick={this.selectLink}\n                value={this.props.activeGrid.exportString}\n              />\n            </div>\n          )}\n          <button\n            className=\"input-style small-cta\"\n            onClick={this.handleShowModal}\n          >\n            Close\n          </button>\n        </ReactModal>\n      </div>\n    );\n  }\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"polygon\", {\n  points: \"7.408,0.021 4.613,2.815 13.797,12 4.613,21.184 7.408,23.979 19.387,12\"\n});\n\nvar SvgIconRightArrow = function SvgIconRightArrow(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 24 24\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgIconRightArrow, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/icon-right-arrow.bc05a4a6.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M1664 1344v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zm0-512v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zm0-512v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45z\"\n});\n\nvar SvgIconBars = function SvgIconBars(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 1792,\n    height: 1792,\n    viewBox: \"0 0 1792 1792\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgIconBars, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/icon-bars.0e7fec71.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactModal from 'react-modal';\nimport { Select, Checkbox } from './inputs/index';\nimport { SketchPicker } from 'react-color';\nimport config from '../config/configHandler';\nimport Cell from '../grid/Cell';\nimport gridsHandler from '../gridsHandler';\nimport colorThemes from '../config/colorThemes';\n//import ImportBrushModal from './modals/ImportBrushModal';\nimport ResetGridModal from './modals/ResetGridModal';\nimport ImportGridModal from './modals/ImportGridModal';\nimport DownloadGridModal from './modals/DownloadGridModal';\nimport ManageGridsModal from './modals/ManageGridsModal';\nimport SaveGridModal from './modals/SaveGridModal';\nimport { ReactComponent as IconRightArrow } from '../media/icon-right-arrow.svg';\nimport { ReactComponent as IconBars } from '../media/icon-bars.svg';\nimport utils from '../utils';\nimport '../css/controls/Controls.css';\nimport '../css/controls/Modal.css';\nconst configData = config.get();\nconst themesList = utils.getSelectList(Object.keys(colorThemes));\nconst borderSizeList = utils.getSelectList(configData.borderSizesList);\n\nclass Controls extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isControlsOpen: configData.isControlsOpen,\n      isOptionsOpen: configData.isOptionsOpen,\n      isSketchPickerOpen: false,\n      displayColorPicker: false,\n      resetGridModalOpen: false,\n      importGridModalOpen: false,\n      downloadGridModalOpen: false,\n      manageGridsModalOpen: false,\n      saveGridModalOpen: false,\n      //importBrushModalOpen: false,\n      //manageBrushesModalOpen: false,\n      headerHeight: 0,\n    };\n    ReactModal.setAppElement('#app');\n    this.resizeTimer = undefined;\n    this.toggleControls = this.toggleControls.bind(this);\n    this.toggleOptions = this.toggleOptions.bind(this);\n    this.switchShowGridlines = this.switchShowGridlines.bind(this);\n    this.changeTimeCompression = this.changeTimeCompression.bind(this);\n    this.changeColorTheme = this.changeColorTheme.bind(this);\n    this.handleGridChange = this.handleGridChange.bind(this);\n    this.resetGrid = this.resetGrid.bind(this);\n    this.importGrid = this.importGrid.bind(this);\n    this.downloadGrid = this.downloadGrid.bind(this);\n    this.saveGrid = this.saveGrid.bind(this);\n    this.deleteGrid = this.deleteGrid.bind(this);\n    this.handleManageGridsModal = this.handleManageGridsModal.bind(this);\n    this.handleImportGridModal = this.handleImportGridModal.bind(this);\n    //this.importBrush = this.importBrush.bind(this);\n    //this.handleImportBrushModal = this.handleImportBrushModal.bind(this);\n    //this.handleManageBrushesModal = this.handleManageBrushesModal.bind(this);\n    //this.deleteBrush = this.deleteBrush.bind(this);\n    this.getMenuMaxHeight = this.getMenuMaxHeight.bind(this);\n    this.onResize = this.onResize.bind(this);\n    this.changeBorderSize = this.changeBorderSize.bind(this);\n    this.handleResetGridModal = this.handleResetGridModal.bind(this);\n    this.handleDownloadGridModal = this.handleDownloadGridModal.bind(this);\n    this.toggleColorPicker = this.toggleColorPicker.bind(this);\n    this.handleCustomColorChange = this.handleCustomColorChange.bind(this);\n    this.handleSaveGridModal = this.handleSaveGridModal.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n    this.handleBrushChange = this.handleBrushChange.bind(this);\n  }\n\n  toggleControls() {\n    let value;\n    this.setState(\n      prevState => {\n        return (value = { isControlsOpen: !prevState.isControlsOpen });\n      },\n      () => {\n        config.save(value);\n      }\n    );\n  }\n\n  toggleOptions() {\n    let value;\n    this.setState(\n      prevState => {\n        return (value = { isOptionsOpen: !prevState.isOptionsOpen });\n      },\n      () => {\n        config.save(value);\n      }\n    );\n  }\n\n  switchShowGridlines() {\n    this.props.switchShowGridlines();\n  }\n\n  changeTimeCompression(event) {\n    this.props.changeTimeCompression(event.target.value);\n  }\n\n  changeColorTheme(event) {\n    this.props.changeColorTheme(event.target.value);\n  }\n\n  changeBorderSize(event) {\n    const newSize =\n      event.target.value !== '' ? parseInt(event.target.value, 10) : 0;\n    this.props.changeBorderSize(newSize);\n  }\n\n  handleGridChange(type, event) {\n    const gridName = event.target.value;\n    if (gridName === 'Load a grid') return this.props.resetGrid();\n    this.props.loadGridFromDb(type, gridName);\n  }\n\n  resetGrid() {\n    this.props.resetGrid();\n  }\n\n  importGrid(gridExportString) {\n    this.props.importGrid(gridExportString);\n  }\n\n  downloadGrid(format, filename) {\n    this.props.downloadGrid(format, filename);\n  }\n\n  saveGrid(name) {\n    this.props.saveGrid(name);\n  }\n\n  //importBrush(brushExportString) {\n  //  this.props.importBrush(brushExportString);\n  //}\n\n  switchShowLayer(layerName, event) {\n    this.props.switchShowLayer(layerName);\n  }\n\n  handleResetGridModal() {\n    this.setState(prevState => {\n      return { resetGridModalOpen: !prevState.resetGridModalOpen };\n    });\n  }\n\n  handleImportGridModal() {\n    this.setState(prevState => {\n      return { importGridModalOpen: !prevState.importGridModalOpen };\n    });\n  }\n\n  handleDownloadGridModal() {\n    this.setState(prevState => {\n      return { downloadGridModalOpen: !prevState.downloadGridModalOpen };\n    });\n  }\n\n  handleManageGridsModal() {\n    this.setState(prevState => {\n      return { manageGridsModalOpen: !prevState.manageGridsModalOpen };\n    });\n  }\n\n  deleteGrid(name) {\n    if (!window.confirm('Do you really want to delete this grid ?')) {\n      return;\n    }\n    const state = gridsHandler.deleteUserGrid(name);\n    const isNoGridLeft = state === 'noGridLeft';\n    const isActiveStateGrid = name === this.props.activeGrid.name;\n    if (isNoGridLeft || isActiveStateGrid) {\n      if (isNoGridLeft) this.handleManageGridsModal();\n      if (isActiveStateGrid) this.resetGrid();\n    } else {\n      // refresh the grid list\n      this.setState(this.state);\n    }\n  }\n\n  toggleColorPicker() {\n    this.setState(prevState => {\n      return { displayColorPicker: !prevState.displayColorPicker };\n    });\n  }\n\n  handleCustomColorChange(color) {\n    this.props.handleCustomColorChange(color);\n  }\n\n  handleSaveGridModal() {\n    this.setState(prevState => {\n      return { saveGridModalOpen: !prevState.saveGridModalOpen };\n    });\n  }\n\n  //handleBrushChange(type, event) {\n  //  const brushName = event.target.value;\n  //  if (brushName === 'Load a brush') return this.props.resetGrid();\n  //  this.props.loadBrushFromDb(type, brushName);\n  //}\n\n  //handleImportBrushModal() {\n  //  this.setState(prevState => {\n  //    return { importBrushModalOpen: !prevState.importBrushModalOpen };\n  //  });\n  //}\n\n  //handleManageBrushesModal() {\n  //  this.setState(prevState => {\n  //    return { manageBrushesModalOpen: !prevState.manageBrushesModalOpen };\n  //  });\n  //}\n\n  //deleteBrush(name) {\n  //  if (!window.confirm('Do you really want to delete this brush ?')) {\n  //    return;\n  //  }\n  //}\n\n  getMenuMaxHeight() {\n    const headerGeometry = this.header.getBoundingClientRect();\n    this.setState(() => {\n      return { headerHeight: headerGeometry.bottom - headerGeometry.top };\n    });\n  }\n\n  onResize() {\n    // Debounce resize\n    if (this.resizeTimer) clearTimeout(this.resizeTimer);\n    this.resizeTimer = setTimeout(this.getMenuMaxHeight, 200);\n  }\n\n  componentDidMount() {\n    this.getMenuMaxHeight();\n    window.addEventListener('resize', this.onResize, { passive: true });\n    document.addEventListener('mousedown', this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('resize', this.onResize);\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n\n  handleClickOutside(event) {\n    if (\n      this.colorPicker &&\n      !ReactDOM.findDOMNode(this.colorPicker).contains(event.target)\n    ) {\n      this.setState(prevState => {\n        return { displayColorPicker: !prevState.displayColorPicker };\n      });\n    }\n  }\n\n  handleBrushChange(layer, tool, event) {\n    event.preventDefault();\n    this.props.changeBrush(layer, tool);\n  }\n\n  render() {\n    const isOptionsMenuOpenClass = this.state.isOptionsOpen ? 'open' : '';\n    const userGridsNames = gridsHandler.getUserGridsNames();\n    const userGridSelectLabel =\n      this.props.activeGrid.type === 'user'\n        ? this.props.activeGrid.name\n        : 'Load a grid';\n    const exampleGridSelectLabel =\n      this.props.activeGrid.type === 'example'\n        ? this.props.activeGrid.name\n        : 'Load a grid';\n    const gridTitle = this.props.activeGrid.name\n      ? this.props.activeGrid.name\n      : 'Untitled';\n\n    return (\n      <section\n        className={`controls ${this.state.isControlsOpen ? 'open' : ''}`}\n        style={{\n          backgroundColor: 'transparent',\n          color: colorThemes[this.props.colorTheme].controlsText,\n          borderColor: colorThemes[this.props.colorTheme].controlsBorder,\n        }}\n      >\n        <style scoped>\n          {`\n            .open-controls-cta {\n              background-color:\n                ${colorThemes[this.props.colorTheme].controlsBackground}\n            }\n\n            button:hover, input[type=submit]:hover {background-color: ${\n              colorThemes[this.props.colorTheme].buttonHoverBackground\n            }}\n            @media screen and (max-width: 560px) {.options-wrapper {max-height: ${window.innerHeight -\n              this.state.headerHeight}px}\n            }`}\n        </style>\n        <header ref={header => (this.header = header)}>\n          <button\n            className=\"open-controls-cta\"\n            onClick={this.toggleControls}\n            alt=\"Right Arrow\"\n            title=\"Open / close controls\"\n          >\n            <IconRightArrow\n              width={24}\n              height={24}\n              className=\"icon\"\n              fill={colorThemes[this.props.colorTheme].controlsText}\n            />\n          </button>\n          <div className=\"controls-bar-wrapper\">\n            <div\n              className=\"info-bar\"\n              style={{\n                backgroundColor:\n                  colorThemes[this.props.colorTheme].controlsBackground,\n              }}\n            >\n              <div className=\"info title\" title={gridTitle}>\n                {gridTitle}\n              </div>\n              <div className=\"info grid-coords\">\n                {`[${this.props.col}, ${this.props.row}]`}\n              </div>\n              <div className=\"info cells-graph\">\n                <div\n                  className=\"background\"\n                  style={{\n                    backgroundColor:\n                      colorThemes[this.props.colorTheme].deadCell,\n                  }}\n                >\n                  <span\n                    className=\"value\"\n                    style={{\n                      color: colorThemes[this.props.colorTheme].cellGraphText,\n                    }}\n                  >{`${this.props.currentLayer}, ${\n                    this.props.currentBrush\n                  }`}</span>\n                </div>\n              </div>\n              <div className=\"info options\">\n                <button\n                  className={`${isOptionsMenuOpenClass}`}\n                  title=\"Open / Close the options\"\n                  alt=\"Down arrow button\"\n                  onClick={this.toggleOptions}\n                  style={{ cursor: 'pointer', display: 'block' }}\n                >\n                  <IconBars\n                    className=\"icon\"\n                    width={14}\n                    height={14}\n                    fill={colorThemes[this.props.colorTheme].controlsText}\n                  />\n                </button>\n              </div>\n            </div>\n            <div\n              className={`options-wrapper ${isOptionsMenuOpenClass}`}\n              style={{\n                backgroundColor:\n                  colorThemes[this.props.colorTheme].optionsMenuBackground,\n              }}\n            >\n              <style scoped>\n                {`.checkbox-wrapper label .checkbox-icon {border-color: ${\n                  colorThemes[this.props.colorTheme].controlsText\n                }}\n                  .checkbox-wrapper input[type=checkbox]:checked + label .checkbox-icon {background-color: ${\n                    colorThemes[this.props.colorTheme].controlsText\n                  }}`}\n              </style>\n              <ul className=\"options-list\">\n                <li>\n                  <Checkbox\n                    id=\"show-gridlines\"\n                    label=\"Show gridlines\"\n                    isChecked={this.props.showGridlines}\n                    title=\"Show the gridlines.\"\n                    handleChange={this.switchShowGridlines}\n                  />\n                </li>\n                <li>\n                  <Select\n                    label=\"Color theme\"\n                    defaultValue={this.props.colorTheme}\n                    options={themesList}\n                    handleChange={this.changeColorTheme}\n                  />\n                </li>\n\n                <li>\n                  <Select\n                    label=\"Border Size (in px)\"\n                    type=\"border\"\n                    defaultValue={this.props.borderSize}\n                    options={borderSizeList}\n                    handleChange={this.changeBorderSize}\n                  />\n                </li>\n\n                {Array.isArray(this.props.gridsLibraryNames) ? (\n                  <li>\n                    <div className=\"input-block select-wrapper\">\n                      <label className=\"input-label\">\n                        <span>Example grids</span>\n                        <select\n                          className=\"input-style\"\n                          value={exampleGridSelectLabel}\n                          onChange={this.handleGridChange.bind(this, 'example')}\n                        >\n                          {this.props.gridsLibraryNames.map((el, index) => (\n                            <option key={index} value={el}>\n                              {el}\n                            </option>\n                          ))}\n                        </select>\n                      </label>\n                    </div>\n                  </li>\n                ) : (\n                  ''\n                )}\n\n                {userGridsNames ? (\n                  <li>\n                    <div className=\"input-block select-wrapper\">\n                      <label className=\"input-label\">\n                        <span>Your grids</span>\n                        <select\n                          className=\"input-style\"\n                          value={userGridSelectLabel}\n                          onChange={this.handleGridChange.bind(this, 'user')}\n                        >\n                          {userGridsNames.map((el, index) => {\n                            return (\n                              <option key={index} value={el}>\n                                {el}\n                              </option>\n                            );\n                          })}\n                        </select>\n                      </label>\n                    </div>\n                  </li>\n                ) : (\n                  ''\n                )}\n\n                <li>\n                  <div className=\"input-block\">\n                    <button\n                      id=\"reset-grid-cta\"\n                      className=\"input-style small-cta\"\n                      title=\"Reset the grid\"\n                      onClick={this.handleResetGridModal}\n                    >\n                      Reset the grid\n                    </button>\n                    <ResetGridModal\n                      showModal={this.state.resetGridModalOpen}\n                      handleShowModal={this.handleResetGridModal}\n                      resetGrid={this.resetGrid}\n                      colorTheme={this.props.colorTheme}\n                      modalStyle={this.props.modalStyle}\n                    />\n                  </div>\n                </li>\n\n                <li>\n                  <div className=\"input-block\">\n                    <button\n                      id=\"save-grid-cta\"\n                      className=\"input-style small-cta\"\n                      title=\"Save and share your grid.\"\n                      onClick={this.handleSaveGridModal}\n                    >\n                      Save & share\n                    </button>\n                    <SaveGridModal\n                      showModal={this.state.saveGridModalOpen}\n                      handleShowModal={this.handleSaveGridModal}\n                      saveGrid={this.saveGrid}\n                      activeGrid={this.props.activeGrid}\n                      colorTheme={this.props.colorTheme}\n                      modalStyle={this.props.modalStyle}\n                    />\n                  </div>\n                </li>\n\n                <li>\n                  <div className=\"input-block\">\n                    <button\n                      id=\"import-grid-cta\"\n                      className=\"input-style small-cta\"\n                      title=\"Import a grid\"\n                      onClick={this.handleImportGridModal}\n                    >\n                      Import a grid\n                    </button>\n                    <ImportGridModal\n                      showModal={this.state.importGridModalOpen}\n                      handleShowModal={this.handleImportGridModal}\n                      importGrid={this.importGrid}\n                      colorTheme={this.props.colorTheme}\n                      modalStyle={this.props.modalStyle}\n                    />\n                  </div>\n                </li>\n\n                <li>\n                  <div className=\"input-block\">\n                    <button\n                      id=\"download-grid-cta\"\n                      className=\"input-style small-cta\"\n                      title=\"Download the grid\"\n                      onClick={this.handleDownloadGridModal}\n                    >\n                      Download the grid\n                    </button>\n                    <DownloadGridModal\n                      showModal={this.state.downloadGridModalOpen}\n                      handleShowModal={this.handleDownloadGridModal}\n                      downloadGrid={this.downloadGrid}\n                      activeGrid={this.props.activeGrid}\n                      colorTheme={this.props.colorTheme}\n                      modalStyle={this.props.modalStyle}\n                    />\n                  </div>\n                </li>\n\n                {userGridsNames ? (\n                  <li>\n                    <div className=\"input-block\">\n                      <button\n                        id=\"manage-grid-cta\"\n                        className=\"input-style small-cta\"\n                        title=\"Manage your grids\"\n                        onClick={this.handleManageGridsModal}\n                      >\n                        Manage grids\n                      </button>\n                      <ManageGridsModal\n                        showModal={this.state.manageGridsModalOpen}\n                        handleShowModal={this.handleManageGridsModal}\n                        loadGrid={this.props.loadGridFromDb}\n                        activeGrid={this.props.activeGrid}\n                        deleteGrid={this.deleteGrid}\n                        colorTheme={this.props.colorTheme}\n                        modalStyle={this.props.modalStyle}\n                      />\n                    </div>\n                  </li>\n                ) : null}\n              </ul>\n            </div>\n            <div className=\"controls-bar\">\n              <div\n                className=\"toolbar big-cta\"\n                style={{\n                  backgroundColor:\n                    colorThemes[this.props.colorTheme].controlsBackground,\n                }}\n              >\n                {Object.keys(configData.layers).map(layerName => {\n                  return (\n                    <div\n                      key={layerName}\n                      className=\"layer\"\n                      data-layer={layerName}\n                      style={{\n                        opacity: this.props.showLayers[layerName] ? 1 : 0.5,\n                      }}\n                    >\n                      <span\n                        title={configData.text[layerName + '-text']}\n                        onClick={e => this.switchShowLayer(layerName, e)}\n                      >\n                        {configData.text[layerName]}\n                      </span>\n                      {configData.layers[layerName].map((brushName, i) => {\n                        return (\n                          <div\n                            className={`${\n                              this.props.currentBrush === brushName &&\n                              this.props.currentLayer === layerName\n                                ? 'selected'\n                                : ''\n                            }`}\n                            key={brushName}\n                            role=\"button\"\n                            data-layer={layerName}\n                            title={configData.text[layerName + '-' + brushName]}\n                            onClick={e => {\n                              this.handleBrushChange(layerName, brushName, e);\n                            }}\n                            style={{\n                              backgroundColor:\n                                colorThemes[this.props.colorTheme]\n                                  .controlsBackground,\n                            }}\n                          >\n                            {brushName === 'g10' ? (\n                              <div\n                                className=\"colorpicker\"\n                                title=\"Select custom color\"\n                                onClick={this.toggleColorPicker}\n                                style={{\n                                  backgroundColor:\n                                    colorThemes[this.props.colorTheme]\n                                      .controlsBackground,\n                                }}\n                              />\n                            ) : null}\n                            {brushName === 'g10' &&\n                            this.state.displayColorPicker ? (\n                              <div\n                                style={{\n                                  position: 'absolute',\n                                  zIndex: '2',\n                                }}\n                              >\n                                <div\n                                  style={{\n                                    position: 'fixed',\n                                    top: '0px',\n                                    right: '0px',\n                                    bottom: '0px',\n                                    left: '0px',\n                                  }}\n                                  onClick={this.handleClose}\n                                />\n                                <SketchPicker\n                                  ref={colorPicker =>\n                                    (this.colorPicker = colorPicker)\n                                  }\n                                  disableAlpha={false}\n                                  color={this.props.customColor}\n                                  onChange={this.handleCustomColorChange}\n                                />\n                              </div>\n                            ) : null}\n                            <svg\n                              version=\"1.1\"\n                              baseProfile=\"full\"\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={30}\n                              height={30}\n                            >\n                              <Cell\n                                key={i}\n                                index={i}\n                                xPos={0}\n                                yPos={0}\n                                size={30}\n                                content={{ center: brushName }}\n                              />\n                            </svg>\n                          </div>\n                        );\n                      })}\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        </header>\n      </section>\n    );\n  }\n}\n\nexport default Controls;\n\n//{Array.isArray(this.props.brushesLibraryNames) ? (\n//  <li>\n//    <div className=\"input-block select-wrapper\">\n//      <label className=\"input-label\">\n//        <span>Default brushes</span>\n//        <select\n//          className=\"input-style\"\n//          value=\"Load a brush\"\n//          //value={defaultBrushSelectLabel}\n//          onChange={this.handleBrushChange.bind(\n//            this,\n//            'default'\n//          )}\n//        >\n//          {this.props.brushesLibraryNames.map((el, index) => (\n//            <option key={index} value={el}>\n//              {el}\n//            </option>\n//          ))}\n//        </select>\n//      </label>\n//    </div>\n//  </li>\n//) : (\n//  null\n//)}\n\n//<li>\n//  <div className=\"input-block\">\n//    <button\n//      id=\"import-brush-cta\"\n//      className=\"input-style small-cta\"\n//      title=\"Import a brush\"\n//      onClick={this.handleImportBrushModal}\n//    >\n//      Import a brush\n//    </button>\n//    <ImportBrushModal\n//      showModal={this.state.importBrushModalOpen}\n//      handleShowModal={this.handleImportBrushModal}\n//      importBrush={this.importBrush}\n//      colorTheme={this.props.colorTheme}\n//      modalStyle={this.props.modalStyle}\n//    />\n//  </div>\n//</li>\n","const Mouse = {\n  NO_BUTTON: 0,\n  LEFT_BUTTON: 1,\n  MIDDLE_BUTTON: 4,\n  RIGHT_BUTTON: 3,\n};\n\nexport default Mouse;\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M12.476,0C5.587,0,0,5.586,0,12.476 c0,5.512,3.575,10.189,8.533,11.842c0.623,0.113,0.853-0.271,0.853-0.604c0-0.296-0.011-1.279-0.017-2.32 c-3.471,0.754-4.203-1.473-4.203-1.473c-0.568-1.444-1.386-1.827-1.386-1.827c-1.132-0.772,0.085-0.758,0.085-0.758 c1.253,0.088,1.913,1.286,1.913,1.286c1.113,1.908,2.919,1.356,3.631,1.039c0.112-0.81,0.435-1.358,0.791-1.67 c-2.771-0.315-5.684-1.385-5.684-6.167c0-1.362,0.487-2.475,1.286-3.349c-0.13-0.314-0.558-1.582,0.121-3.301 c0,0,1.047-0.336,3.432,1.278c0.995-0.276,2.062-0.415,3.122-0.419c1.061,0.004,2.129,0.143,3.125,0.419 c2.384-1.614,3.43-1.278,3.43-1.278c0.68,1.719,0.25,2.987,0.122,3.301c0.801,0.874,1.283,1.986,1.283,3.349 c0,4.792-2.918,5.847-5.696,6.157c0.447,0.385,0.847,1.146,0.847,2.309c0,1.671-0.015,3.015-0.015,3.424 c0,0.333,0.224,0.723,0.855,0.602c4.957-1.652,8.526-6.329,8.526-11.84C24.953,5.586,19.365,0,12.476,0z\"\n});\n\nvar SvgIconGithub = function SvgIconGithub(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 25 25\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgIconGithub, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/icon-github.665b6afd.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M8,5.333H6V8h2v8h3.334V8h2.428L14,5.333h-2.666V4.222c0-0.637,0.127-0.889,0.742-0.889H14V0h-2.539 C9.064,0,8,1.055,8,3.077V5.333z\"\n});\n\nvar SvgIconFacebook = function SvgIconFacebook(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 16 16\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgIconFacebook, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/icon-facebook.567c33ac.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M16,3.538c-0.588,0.261-1.221,0.437-1.885,0.516c0.677-0.406,1.198-1.049,1.442-1.816c-0.634,0.376-1.337,0.65-2.084,0.797 c-0.599-0.638-1.452-1.037-2.396-1.037c-2.119,0-3.676,1.977-3.198,4.03c-2.727-0.137-5.146-1.444-6.765-3.43 c-0.86,1.475-0.446,3.405,1.016,4.383C1.592,6.964,1.085,6.817,0.644,6.571C0.607,8.092,1.698,9.514,3.276,9.83 C2.814,9.956,2.308,9.985,1.793,9.887C2.21,11.19,3.422,12.14,4.86,12.166c-1.38,1.082-3.119,1.565-4.86,1.36 C1.453,14.458,3.179,15,5.032,15c6.094,0,9.539-5.146,9.33-9.763C15.003,4.774,15.561,4.195,16,3.538z\"\n});\n\nvar SvgIconTwitter = function SvgIconTwitter(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 16 16\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgIconTwitter, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/icon-twitter.c98f0834.svg\";\nexport { ForwardRef as ReactComponent };","import React, { Component } from 'react';\nimport ReactModal from 'react-modal';\n\nexport default class AboutModal extends Component {\n  constructor(props) {\n    super(props);\n    this.handleShowModal = this.handleShowModal.bind(this);\n  }\n\n  handleShowModal() {\n    this.props.handleShowModal();\n  }\n\n  render() {\n    return (\n      <div>\n        <ReactModal\n          isOpen={this.props.showModal}\n          contentLabel=\"onRequestClose Example\"\n          onRequestClose={this.handleShowModal}\n          style={this.props.modalStyle}\n          className={{\n            base: 'modal modal-about',\n            afterOpen: 'modal-opened',\n            beforeClose: 'modal-closed',\n          }}\n        >\n          <h2>About this project</h2>\n          <p>\n            This project is an app to create scalable vector grids, it is coded\n            with{' '}\n            <a\n              href=\"https://github.com/facebook/create-react-app\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              create-react-app\n            </a>\n            .\n          </p>\n          <p>\n            Created by{' '}\n            <a\n              href=\"https://www.cravesoft.com\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Olivier Crave\n            </a>\n            , MIT License.\n          </p>\n          <p>\n            You can find the{' '}\n            <a\n              href=\"https://github.com/cravesoft/gridbrush\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Github repo here\n            </a>\n            .\n          </p>\n          <button\n            className=\"input-style small-cta\"\n            onClick={this.handleShowModal}\n          >\n            Close\n          </button>\n        </ReactModal>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport colorThemes from './config/colorThemes';\nimport { ReactComponent as IconGithub } from './media/icon-github.svg';\nimport { ReactComponent as IconFacebook } from './media/icon-facebook.svg';\nimport { ReactComponent as IconTwitter } from './media/icon-twitter.svg';\nimport AboutModal from './controls/modals/AboutModal';\nimport pckg from '../package.json';\nimport './css/Footer.css';\n\nconst twitterLink = `https://twitter.com/intent/tweet?text=${encodeURIComponent(\n  pckg.description\n)}\n&via=Sarcadass&url=${encodeURIComponent(pckg.url)}`;\n\nexport default class Footer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isAboutModalOpen: false };\n    this.handleAboutModal = this.handleAboutModal.bind(this);\n  }\n\n  handleAboutModal(event) {\n    if (event) event.preventDefault();\n    this.setState(prevState => {\n      return { isAboutModalOpen: !prevState.isAboutModalOpen };\n    });\n  }\n\n  render() {\n    return (\n      <footer style={{ color: colorThemes[this.props.colorTheme].footerText }}>\n        <div className=\"social-share-wrapper\">\n          {/* Github Link */}\n          <a\n            className=\"github\"\n            href=\"https://github.com/cravesoft/gridbrush\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <IconGithub\n              width={20}\n              height={20}\n              fill={colorThemes[this.props.colorTheme].footerText}\n            />\n          </a>\n          {/* Share on Facebook */}\n          <a\n            className=\"social-cta facebook\"\n            href={`http://www.facebook.com/sharer.php?u=${encodeURIComponent(\n              pckg.url\n            )}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <IconFacebook width={12} height={12} fill=\"#fff\" /> Share on\n            Facebook\n          </a>\n          {/* Share on Twitter */}\n          <a\n            className=\"social-cta twitter\"\n            href={twitterLink}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <IconTwitter width={12} height={12} fill=\"#fff\" /> Share on Twitter\n          </a>\n          <AboutModal\n            showModal={this.state.isAboutModalOpen}\n            handleShowModal={this.handleAboutModal}\n            colorTheme={this.props.colorTheme}\n            modalStyle={this.props.modalStyle}\n          />\n        </div>\n\n        <p className=\"credits-wrapper\">\n          <span className=\"first-row\">\n            <strong>GridBrush v{pckg.version}. </strong>\n            <a\n              className=\"about-modal-cta\"\n              href=\"#open-about-modal\"\n              onClick={this.handleAboutModal}\n            >\n              About this project\n            </a>\n            .\n          </span>\n          Created by{' '}\n          <a\n            href=\"https://www.cravesoft.com\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {pckg.author}\n          </a>\n          , {pckg.license} license.\n        </p>\n      </footer>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nclass TextCell extends Component {\n  constructor(props) {\n    super(props);\n    this.handleMouseOver = this.handleMouseOver.bind(this);\n  }\n\n  handleMouseOver() {\n    let tooltip = document.getElementById('tooltip');\n    tooltip.style.bottom = `${window.innerHeight - this.props.yPos}px`;\n    tooltip.style.left = `${this.props.xPos}px`;\n    tooltip.childNodes[0].innerHTML = this.props.content.value.replace(\n      /(?:\\r\\n|\\r|\\n)/g,\n      '<br>'\n    );\n    tooltip.style.visibility = 'visible';\n  }\n\n  handleMouseOut() {\n    document.getElementById('tooltip').style.visibility = 'hidden';\n  }\n\n  render() {\n    const { index, xPos, yPos, size, content } = this.props;\n    if (content === undefined) return null;\n    if (content.type === undefined || content.type === 'eraser') return null;\n    const y0 = yPos;\n    const coef = 0.75;\n    return (\n      <g>\n        {content.show ? (\n          <text\n            data-index={index}\n            x={xPos}\n            y={y0}\n            style={{\n              font: `bold ${content.size}px sans-serif`,\n              transform: `rotate(${content.rotation}deg)`,\n              transformOrigin: `${xPos}px ${y0}px`,\n            }}\n            fill={`rgb(${content.color.r}, ${content.color.g}, ${\n              content.color.b\n            })`}\n            fillOpacity={content.color.a}\n          >\n            {content.value.split('\\n').map((value, i) => {\n              return (\n                <tspan x={xPos} dy=\"1.2em\">\n                  {value}\n                </tspan>\n              );\n            })}\n          </text>\n        ) : (\n          <g>\n            <rect\n              x={xPos}\n              y={yPos}\n              fill=\"transparent\"\n              width={size}\n              height={size}\n              onMouseOver={this.handleMouseOver}\n              onMouseOut={this.handleMouseOut}\n            />\n            <polygon\n              fill=\"red\"\n              points={`${xPos + size * coef},${yPos} ${xPos +\n                size},${yPos} ${xPos + size},${yPos +\n                size * (1 - coef)} ${xPos + size * coef},${yPos}`}\n            />\n          </g>\n        )}\n      </g>\n    );\n  }\n}\n\nexport default TextCell;\n","import React, { Component } from 'react';\nimport Cell from './Cell';\nimport TextCell from './TextCell';\n\nclass Layer extends Component {\n  render() {\n    const { name, cellSize, cells, shiftCoord } = this.props;\n    if (name === 'lnotes')\n      return (\n        <g id={name}>\n          {cells.map((cell, i) => {\n            const xPos = cell.col * cellSize + shiftCoord.x;\n            const yPos = cell.row * cellSize + shiftCoord.y;\n            return (\n              <TextCell\n                key={i}\n                index={i}\n                xPos={xPos}\n                yPos={yPos}\n                size={cellSize}\n                content={cell.content}\n              />\n            );\n          })}\n        </g>\n      );\n    else\n      return (\n        <g id={name}>\n          {cells.map((cell, i) => {\n            const xPos = cell.col * cellSize + shiftCoord.x;\n            const yPos = cell.row * cellSize + shiftCoord.y;\n            return (\n              <Cell\n                key={i}\n                index={i}\n                xPos={xPos}\n                yPos={yPos}\n                size={cellSize}\n                content={cell.content}\n              />\n            );\n          })}\n        </g>\n      );\n  }\n}\n\nexport default Layer;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactModal from 'react-modal';\nimport config from '../../config/configHandler';\nimport { Checkbox } from '../inputs/index';\nimport { SketchPicker } from 'react-color';\n\nexport default class TextModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: null,\n      showText: null,\n      textSize: null,\n      textColor: null,\n      textRotation: null,\n      displayColorPicker: false,\n    };\n    this.handleShowModal = this.handleShowModal.bind(this);\n    this.submit = this.submit.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n    this.toggleColorPicker = this.toggleColorPicker.bind(this);\n    this.handleValueChange = this.handleValueChange.bind(this);\n    this.handleSizeChange = this.handleSizeChange.bind(this);\n    this.handleColorChange = this.handleColorChange.bind(this);\n    this.handleRotationChange = this.handleRotationChange.bind(this);\n    this.handleShowChange = this.handleShowChange.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n\n  toggleColorPicker() {\n    this.setState(prevState => {\n      return { displayColorPicker: !prevState.displayColorPicker };\n    });\n  }\n\n  handleClickOutside(event) {\n    if (\n      this.colorPicker &&\n      !ReactDOM.findDOMNode(this.colorPicker).contains(event.target)\n    ) {\n      this.setState(prevState => {\n        return { displayColorPicker: !prevState.displayColorPicker };\n      });\n    }\n  }\n\n  handleShowModal() {\n    this.setState(\n      {\n        value: null,\n        showText: null,\n        textSize: null,\n        textColor: null,\n        textRotation: null,\n      },\n      () => {\n        this.props.onShowTextModal();\n      }\n    );\n  }\n\n  submit(event) {\n    event.preventDefault();\n    this.props.onSubmit({\n      value: this.getTextValue(),\n      show: this.getTextShow(),\n      size: this.getTextSize(),\n      color: this.getTextColor(),\n      rotation: this.getTextRotation(),\n    });\n    this.handleShowModal();\n  }\n\n  handleValueChange(event) {\n    this.setState({\n      value: event.target.value,\n    });\n  }\n\n  handleShowChange(event) {\n    let value;\n    this.setState(\n      prevState => {\n        return (value = { showText: !this.getTextShow() });\n      },\n      () => {\n        config.save(value);\n      }\n    );\n  }\n\n  handleSizeChange(event) {\n    let value;\n    const size = event.target.value;\n    this.setState(\n      prevState => {\n        return (value = { textSize: size });\n      },\n      () => {\n        config.save(value);\n      }\n    );\n  }\n\n  handleColorChange(color) {\n    let value;\n    this.setState(\n      prevState => {\n        return (value = { textColor: color.rgb });\n      },\n      () => {\n        config.save(value);\n      }\n    );\n  }\n\n  handleRotationChange(event) {\n    this.setState({\n      textRotation: event.target.value,\n    });\n  }\n\n  getTextValue() {\n    return this.state.value\n      ? this.state.value\n      : this.props.currentContent && this.props.currentContent.value\n      ? this.props.currentContent.value\n      : '';\n  }\n\n  getTextShow() {\n    return this.state.showText !== null\n      ? this.state.showText\n      : this.props.currentContent !== undefined &&\n        this.props.currentContent.show != null\n      ? this.props.currentContent.show\n      : config.get().showText;\n  }\n\n  getTextSize() {\n    return this.state.textSize\n      ? this.state.textSize\n      : this.props.currentContent && this.props.currentContent.size\n      ? this.props.currentContent.size\n      : config.get().textSize;\n  }\n\n  getTextColor() {\n    return this.state.textColor\n      ? this.state.textColor\n      : this.props.currentContent && this.props.currentContent.color\n      ? this.props.currentContent.color\n      : config.get().textColor;\n  }\n\n  getTextRotation() {\n    return this.state.textRotation\n      ? this.state.textRotation\n      : this.props.currentContent && this.props.currentContent.rotation\n      ? this.props.currentContent.rotation\n      : 0;\n  }\n\n  getTextColorInHexa() {\n    const color = this.getTextColor();\n    return `rgb(${color.r}, ${color.g}, ${color.b})`;\n  }\n\n  getTextColorAlpha() {\n    const color = this.getTextColor();\n    return color.a;\n  }\n\n  render() {\n    return (\n      <div>\n        <ReactModal\n          isOpen={this.props.showModal}\n          contentLabel=\"onRequestClose Example\"\n          onRequestClose={this.handleShowModal}\n          style={this.props.modalStyle}\n          className={{\n            base: 'modal text-modal',\n            afterOpen: 'modal-opened',\n            beforeClose: 'modal-closed',\n          }}\n        >\n          {this.state.displayColorPicker ? (\n            <div\n              style={{\n                top: '10px',\n                left: '35px',\n                position: 'absolute',\n                zIndex: '99999',\n              }}\n            >\n              <div\n                style={{\n                  position: 'fixed',\n                  top: '0px',\n                  right: '0px',\n                  bottom: '0px',\n                  left: '0px',\n                }}\n                onClick={this.handleClose}\n              />\n              <SketchPicker\n                ref={colorPicker => (this.colorPicker = colorPicker)}\n                disableAlpha={false}\n                color={this.getTextColor()}\n                onChange={this.handleColorChange}\n              />\n            </div>\n          ) : (\n            ''\n          )}\n          <h2>Text properties</h2>\n          <form onSubmit={this.submit}>\n            <p>Write text below.</p>\n            <textarea\n              value={this.getTextValue()}\n              onChange={this.handleValueChange}\n            />\n            <div className=\"options-wrapper\">\n              <ul className=\"options-list\">\n                <li />\n                <li>\n                  <Checkbox\n                    id=\"text-show\"\n                    label=\"Show text\"\n                    isChecked={this.getTextShow()}\n                    title=\"Show the text.\"\n                    handleChange={this.handleShowChange}\n                  />\n                </li>\n                <li>\n                  <div className=\"option\">\n                    <label htmlFor=\"font-size\" title=\"Font size\">\n                      <span className=\"label-text\">Font size</span>\n                    </label>\n                    <input\n                      type=\"number\"\n                      id=\"font-size\"\n                      className=\"input-number\"\n                      value={this.getTextSize()}\n                      onChange={this.handleSizeChange}\n                    />\n                  </div>\n                </li>\n                <li>\n                  <div className=\"option\">\n                    <label htmlFor=\"font-color\" title=\"Font color\">\n                      <span className=\"label-text\">Font color</span>\n                    </label>\n                    <div\n                      id=\"font-color\"\n                      onClick={this.toggleColorPicker}\n                      className=\"font-color\"\n                      title=\"Select font color\"\n                    >\n                      <svg\n                        version=\"1.1\"\n                        baseProfile=\"full\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width={20}\n                        height={20}\n                      >\n                        <rect\n                          x=\"0\"\n                          y=\"0\"\n                          width=\"20\"\n                          height=\"20\"\n                          fill={this.getTextColorInHexa()}\n                          fillOpacity={this.getTextColorAlpha()}\n                        />\n                      </svg>\n                    </div>\n                  </div>\n                </li>\n                <li>\n                  <div className=\"option\">\n                    <label htmlFor=\"text-orientation\" title=\"Text orientation\">\n                      <span className=\"label-text\">Text orientation</span>\n                    </label>\n                    <input\n                      id=\"text-orientation\"\n                      className=\"input-number\"\n                      type=\"number\"\n                      value={this.getTextRotation()}\n                      onChange={this.handleRotationChange}\n                    />\n                  </div>\n                </li>\n              </ul>\n            </div>\n            <input\n              type=\"submit\"\n              className=\"input-style small-cta\"\n              value=\"Apply\"\n            />\n          </form>\n          <button\n            className=\"input-style small-cta\"\n            onClick={this.handleShowModal}\n          >\n            Cancel\n          </button>\n        </ReactModal>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Mouse from '../Mouse';\nimport utils from '../utils';\nimport TextModal from '../controls/modals/TextModal';\n\nclass TextTool extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      textModalOpen: false,\n    };\n    this.row = 0;\n    this.col = 0;\n    this.currentContent = undefined;\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleShowTextModal = this.handleShowTextModal.bind(this);\n  }\n\n  mousemove(buttonPressedCode, x, y, event) {\n    const col = Math.floor(x / this.props.cellSize);\n    const row = Math.floor(y / this.props.cellSize);\n    this.props.onCoordChange({ col, row });\n  }\n\n  mouseup(buttonPressedCode, x, y, event) {\n    const col = Math.floor(x / this.props.cellSize);\n    const row = Math.floor(y / this.props.cellSize);\n    switch (buttonPressedCode) {\n      case Mouse.LEFT_BUTTON:\n        if (this.props.currentBrush === 'eraser') {\n          this.props.removeCell(col, row);\n          return;\n        }\n        this.col = col;\n        this.row = row;\n        // find current cell content\n        const cellIndex = utils.findCellIndex(this.props.layer, col, row);\n        if (cellIndex !== -1) {\n          this.currentContent = this.props.layer[cellIndex].content;\n        } else {\n          this.currentContent = undefined;\n        }\n        this.handleShowTextModal();\n        break;\n      default:\n        break;\n    }\n  }\n\n  mousedown(buttonPressedCode, x, y, event) {}\n\n  handleShowTextModal() {\n    this.setState(prevState => {\n      return { textModalOpen: !prevState.textModalOpen };\n    });\n  }\n\n  handleFormSubmit(content) {\n    content.type = this.props.currentBrush;\n    this.props.updateCellContent(this.col, this.row, content);\n  }\n\n  render() {\n    return (\n      <TextModal\n        showModal={this.state.textModalOpen}\n        onShowTextModal={this.handleShowTextModal}\n        currentContent={this.currentContent}\n        onSubmit={this.handleFormSubmit}\n        modalStyle={this.props.modalStyle}\n      />\n    );\n  }\n}\n\nexport default TextTool;\n","import { Component } from 'react';\nimport Mouse from '../Mouse';\n\nclass PatchTool extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  mousedown(buttonPressedCode, x, y, event) {\n    this.mousemove(buttonPressedCode, x, y, event);\n  }\n\n  mousemove(buttonPressedCode, x, y, event) {\n    const col = Math.floor(x / this.props.cellSize);\n    const row = Math.floor(y / this.props.cellSize);\n    switch (buttonPressedCode) {\n      case Mouse.NO_BUTTON:\n        this.props.updateDisplayCellContent(col, row, {\n          center: this.props.currentBrush,\n        });\n        break;\n      case Mouse.LEFT_BUTTON:\n        //TODO uncomment?\n        //const pointerType = utils.getPointerType(event.type);\n        //const moveEvent =\n        //  pointerType === 'touch' ? 'touchmove' : 'mousemove';\n        //if (event.type === moveEvent) {\n        //  // Don't switch a cell multiple times or cell with the\n        //  // same state as the new one changed\n        //  const cellIndex = row * utils.getColSize() + col;\n        //  if (\n        //    this.props.currentIndexChanged.hasOwnProperty(cellIndex) ||\n        //    this.props.grid[this.props.currentLayer][cellIndex] ===\n        //      this.props.currentBrush\n        //  ) {\n        //    return;\n        //  }\n        //  this.props.currentIndexChanged[cellIndex] = true;\n        //}\n        this.props.updateCellContent(col, row, {\n          center: this.props.currentBrush,\n        });\n        break;\n      default:\n        break;\n    }\n  }\n\n  mouseup(buttonPressedCode, x, y, event) {}\n\n  render() {\n    return null;\n  }\n}\n\nexport default PatchTool;\n","import { Component } from 'react';\nimport Mouse from '../Mouse';\n\nconst PixelPosition = {\n  TOP_LEFT: 0,\n  BOTTOM_LEFT: 1,\n  TOP_RIGHT: 2,\n  BOTTOM_RIGHT: 3,\n};\n\nfunction getDist(point0, point1) {\n  return Math.sqrt(\n    Math.pow(point0.a - point1.a, 2) + Math.pow(point0.b - point1.b, 2)\n  );\n}\n\nfunction getDistX(point0, point1) {\n  return Math.abs(point0.a - point1.a);\n}\n\nfunction getDistY(point0, point1) {\n  return Math.abs(point0.b - point1.b);\n}\n\nfunction getPosition(point0, point1, len) {\n  const diagLen = len;\n  switch (point1.pos) {\n    case PixelPosition.TOP_LEFT:\n      switch (point0.pos) {\n        case PixelPosition.TOP_RIGHT:\n          if (getDistX(point0, point1) >= len) return 'top';\n          break;\n        case PixelPosition.BOTTOM_LEFT:\n          if (getDistY(point0, point1) >= len) return 'left';\n          break;\n        case PixelPosition.BOTTOM_RIGHT:\n          if (getDist(point0, point1) >= diagLen) return 'diag1';\n          break;\n        default:\n          break;\n      }\n      return null;\n    case PixelPosition.TOP_RIGHT:\n      switch (point0.pos) {\n        case PixelPosition.TOP_LEFT:\n          if (getDistX(point0, point1) >= len) return 'top';\n          break;\n        case PixelPosition.BOTTOM_LEFT:\n          if (getDist(point0, point1) >= diagLen) return 'diag2';\n          break;\n        case PixelPosition.BOTTOM_RIGHT:\n          if (getDistY(point0, point1) >= len) return 'right';\n          break;\n        default:\n          break;\n      }\n      return null;\n    case PixelPosition.BOTTOM_LEFT:\n      switch (point0.pos) {\n        case PixelPosition.TOP_LEFT:\n          if (getDistY(point0, point1) >= len) return 'left';\n          break;\n        case PixelPosition.TOP_RIGHT:\n          if (getDist(point0, point1) >= diagLen) return 'diag2';\n          break;\n        case PixelPosition.BOTTOM_RIGHT:\n          if (getDistX(point0, point1) >= len) return 'bottom';\n          break;\n        default:\n          break;\n      }\n      return null;\n    case PixelPosition.BOTTOM_RIGHT:\n      switch (point0.pos) {\n        case PixelPosition.TOP_LEFT:\n          if (getDist(point0, point1) >= diagLen) return 'diag1';\n          break;\n        case PixelPosition.TOP_RIGHT:\n          if (getDistY(point0, point1) >= len) return 'right';\n          break;\n        case PixelPosition.BOTTOM_LEFT:\n          if (getDistX(point0, point1) >= len) return 'bottom';\n          break;\n        default:\n          break;\n      }\n      return null;\n    default:\n      return null;\n  }\n}\n\nfunction getPositionInCell(point, half) {\n  if (point.a < half) {\n    if (point.b < half) return PixelPosition.TOP_LEFT;\n    else return PixelPosition.BOTTOM_LEFT;\n  } else {\n    if (point.b < half) return PixelPosition.TOP_RIGHT;\n    else return PixelPosition.BOTTOM_RIGHT;\n  }\n}\n\nclass BackstitchTool extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.point0 = null;\n  }\n\n  mousedown(buttonPressedCode, x, y, event) {\n    switch (buttonPressedCode) {\n      case Mouse.LEFT_BUTTON:\n        const col = Math.floor(x / this.props.cellSize);\n        const row = Math.floor(y / this.props.cellSize);\n        this.point0 = {\n          x,\n          y,\n          col,\n          row,\n        };\n        break;\n      default:\n        break;\n    }\n  }\n\n  mousemove(buttonPressedCode, x, y, event) {\n    const col = Math.floor(x / this.props.cellSize);\n    const row = Math.floor(y / this.props.cellSize);\n    switch (buttonPressedCode) {\n      case Mouse.NO_BUTTON:\n        this.props.onCoordChange({ col, row });\n        break;\n      case Mouse.LEFT_BUTTON:\n        // return if origin is not set\n        if (this.point0 === null) {\n          return;\n        }\n\n        // project origin onto current cell\n        let point0 = {\n          a: 0,\n          b: 0,\n        };\n        const cell = {\n          x: col * this.props.cellSize,\n          y: row * this.props.cellSize,\n        };\n        if (this.point0.x >= cell.x + this.props.cellSize)\n          point0.a = this.props.cellSize;\n        else if (this.point0.x >= cell.x)\n          point0.a = this.point0.x % this.props.cellSize;\n        if (this.point0.y >= cell.y + this.props.cellSize)\n          point0.b = this.props.cellSize;\n        else if (this.point0.y >= cell.y)\n          point0.b = this.point0.y % this.props.cellSize;\n\n        // compute mouse position in current cell\n        const point1 = {\n          a: x % this.props.cellSize,\n          b: y % this.props.cellSize,\n        };\n        const half = this.props.cellSize / 2;\n        point0.pos = getPositionInCell(point0, half);\n        point1.pos = getPositionInCell(point1, half);\n\n        // get position of current line piece\n        const pos = getPosition(point0, point1, half);\n        if (pos === null) return;\n\n        // reset origin\n        this.point0 = {\n          x,\n          y,\n          col,\n          row,\n        };\n\n        // draw line piece\n        this.props.updateCellContent(\n          col,\n          row,\n          { [pos]: this.props.currentBrush },\n          () => {\n            if (pos !== 'diag1' && pos !== 'diag2') {\n              // reset neighbor line piece\n              let neighborRow = row;\n              let neighborCol = col;\n              let neighborPos;\n              if (pos === 'top') {\n                neighborRow--;\n                neighborPos = 'bottom';\n              } else if (pos === 'bottom') {\n                neighborRow++;\n                neighborPos = 'top';\n              } else if (pos === 'left') {\n                neighborCol--;\n                neighborPos = 'right';\n              } else {\n                neighborCol++;\n                neighborPos = 'left';\n              }\n              this.props.updateCellContent(neighborCol, neighborRow, {\n                [neighborPos]: undefined,\n              });\n            }\n          }\n        );\n        break;\n      default:\n        break;\n    }\n  }\n\n  mouseup(buttonPressedCode, x, y, event) {\n    switch (buttonPressedCode) {\n      case Mouse.LEFT_BUTTON:\n        // reset the last mouse position\n        this.point0 = null;\n        break;\n      default:\n        break;\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default BackstitchTool;\n","import { Component } from 'react';\n\nclass Panning extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startCoord: null,\n      startShiftCoord: null,\n    };\n  }\n\n  mousedown(event) {\n    this.setState(\n      {\n        startCoord: {\n          x: event.pageX,\n          y: event.pageY,\n        },\n        startShiftCoord: this.props.shiftCoord,\n      },\n      () => {\n        this.props.onChange(true, this.props.shiftCoord);\n      }\n    );\n  }\n\n  mousemove(event) {\n    if (this.props.isPanning) {\n      this.props.onChange(true, {\n        x: this.state.startShiftCoord.x + event.pageX - this.state.startCoord.x,\n        y: this.state.startShiftCoord.y + event.pageY - this.state.startCoord.y,\n      });\n    }\n  }\n\n  mouseup(event) {\n    this.props.onChange(false, this.props.shiftCoord);\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default Panning;\n","import utils from './utils';\n\nconst brushesHandler = {\n  saveCustomBrush: options => {\n    let customBrushes = brushesHandler.getCustomBrushes();\n    let newCustomBrushes = customBrushes ? customBrushes : {};\n    let brushData = brushesHandler.getBrushLifeMapAndSize(\n      options.gridSize,\n      options.indexChanged\n    );\n    newCustomBrushes[options.name] = {\n      name: options.name,\n      brushSize: brushData.size,\n      lifeMap: brushData.lifeMap,\n    };\n    const exportString = brushesHandler.encodeBrushExportString(\n      newCustomBrushes[options.name]\n    );\n    newCustomBrushes[options.name].exportString = exportString;\n    localStorage.setItem('customBrushes', JSON.stringify(newCustomBrushes));\n  },\n\n  importCustomBrush: (brushData, brushExportString) => {\n    let customBrushes = brushesHandler.getCustomBrushes();\n    let newCustomBrushes = customBrushes ? customBrushes : {};\n    newCustomBrushes[brushData.name] = brushData;\n    newCustomBrushes[brushData.name].exportString = brushExportString;\n    localStorage.setItem('customBrushes', JSON.stringify(newCustomBrushes));\n  },\n\n  // Generate a brush export string by encoding brush data to a base64 string\n  encodeBrushExportString: brushData =>\n    btoa(unescape(encodeURIComponent(JSON.stringify(brushData)))),\n\n  decodeBrushExportString: exportString => {\n    try {\n      return JSON.parse(decodeURIComponent(escape(atob(exportString))));\n    } catch (e) {\n      // If corrupted Base64 string, return undefined\n      return undefined;\n    }\n  },\n\n  loadCustomBrush: name => {\n    const customBrushes = brushesHandler.getCustomBrushes();\n    return customBrushes ? customBrushes[name] : null;\n  },\n\n  deleteCustomBrush: name => {\n    const customBrushes = brushesHandler.getCustomBrushes();\n    // If only one brush delete customBrushes from localStorage\n    if (Object.keys(customBrushes).length === 1) {\n      localStorage.removeItem('customBrushes');\n      return 'noBrushLeft';\n    }\n    delete customBrushes[name];\n    localStorage.setItem('customBrushes', JSON.stringify(customBrushes));\n  },\n\n  doesImportBrushAlreadyExist: brushExportString => {\n    const customBrushes = brushesHandler.getCustomBrushes();\n    for (let brush in customBrushes) {\n      if (customBrushes[brush].exportString === brushExportString) {\n        return customBrushes[brush].name;\n      }\n    }\n    return false;\n  },\n\n  getCustomBrushes: () => JSON.parse(localStorage.getItem('customBrushes')),\n\n  getCustomBrushesNames: () => {\n    const customBrushes = brushesHandler.getCustomBrushes();\n    if (customBrushes) {\n      let customBrushesNames = Object.keys(customBrushes);\n      customBrushesNames.unshift('Load a brush');\n      return customBrushesNames;\n    }\n    return null;\n  },\n\n  getBrushLifeMapAndSize: (gridSize, indexChanged) => {\n    let lifeMap = utils.generateSeed();\n    let colLength = gridSize[0];\n    let rowLength = gridSize[1];\n    indexChanged.forEach((el, i) => {\n      lifeMap[el] = lifeMap[el] ? 0 : 1;\n    });\n    let gridMap = {};\n    let activeGridRow = -1;\n\n    // Create an 'hashMap' of the actual lifeMap with rows\n    // as keys containing the cols\n    for (let i = 0; i < lifeMap.length; i++) {\n      if (!(i % colLength)) {\n        activeGridRow += 1;\n        gridMap[activeGridRow] = [];\n      }\n      gridMap[activeGridRow].push(lifeMap[i]);\n    }\n\n    let widthStart, widthEnd, heightStart, heightEnd;\n    // Detect the cell Alive the most on the left and right\n    // of the actual brush\n    for (let i = 0; i < rowLength; i++) {\n      let widthStartSetForActualRow = false;\n      // If no cell alive on the actual row, continue\n      if (gridMap[i].indexOf(1) === -1) continue;\n      // Set the first row of the brush\n      if (heightStart === undefined) heightStart = i;\n      // Set the last row of the brush\n      if (heightEnd === undefined || i > heightEnd) heightEnd = i;\n      // Iterate on each col cell of the current row\n      for (let j = 0; j < gridMap[i].length; j++) {\n        if (!widthStartSetForActualRow) {\n          // If the cell is alive and under the actual\n          // saved widthStart\n          if (gridMap[i][j] && (widthStart === undefined || j < widthStart)) {\n            widthStart = j;\n            widthStartSetForActualRow = true;\n          }\n        }\n        // If the cell is alive and under the actual\n        // saved widthEnd\n        if (gridMap[i][j] && (widthEnd === undefined || j > widthEnd)) {\n          widthEnd = j;\n        }\n      }\n    }\n\n    let brushWidth = widthStart !== undefined ? widthEnd - widthStart + 1 : 0;\n    let brushHeight =\n      heightStart !== undefined ? heightEnd - heightStart + 1 : 0;\n    let widthDiff = gridSize[0] - brushWidth;\n    let brushlifeMap = indexChanged.map(el => {\n      // remove previous row\n      let newIndex = el - widthDiff * Math.floor(el / gridSize[0]);\n      newIndex -= widthStart;\n      newIndex -= brushWidth * heightStart;\n      return newIndex;\n    });\n\n    return {\n      size: [brushWidth, brushHeight],\n      lifeMap: brushlifeMap,\n    };\n  },\n};\n\nexport default brushesHandler;\n","import React, { Component } from 'react';\nimport FileSaver from 'file-saver';\nimport config from './config/configHandler';\nimport colorThemes from './config/colorThemes';\nimport utils from './utils';\nimport Controls from './controls/Controls';\nimport Mouse from './Mouse';\nimport Footer from './Footer';\nimport Layer from './grid/Layer';\nimport TextTool from './tools/TextTool';\nimport PatchTool from './tools/PatchTool';\nimport BackstitchTool from './tools/BackstitchTool';\nimport Panning from './Panning';\nimport NotificationSystem from 'react-notification-system';\nimport gridsHandler from './gridsHandler';\nimport brushesHandler from './brushesHandler';\nimport notif from './notifications';\nimport './css/App.css';\nconst configData = config.get();\nlet gridsLibrary = null;\nlet brushesLibrary = null;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    utils.initGridData(configData.cellSize);\n    this.state = {\n      col: 0,\n      row: 0,\n      customColor: configData.customColor,\n      cellSize: configData.cellSize,\n      borderSize: configData.borderSize,\n      randomSeed: configData.randomSeed,\n      showGridlines: configData.showGridlines,\n      gridSize: utils.getGridSize(),\n      gridsLibraryNames: null,\n      activeGrid: { name: null, exportString: null },\n      colorTheme: configData.colorTheme,\n      modalStyle: config.getModalStyle(configData.colorTheme),\n      grid: null,\n      showLayers: null,\n      displayGrid: null,\n      currentBrush: null,\n      currentLayer: null,\n      isPanning: false,\n      shiftCoord: { x: 0, y: 0 },\n    };\n    this.startPanCoord = null;\n    this.startPanDisplacement = null;\n    this.pixelRatio = window.devicePixelRatio;\n    this.currentIndexChanged = {};\n    this.tools = {};\n    this.changeColorTheme = this.changeColorTheme.bind(this);\n    this.changeBrush = this.changeBrush.bind(this);\n    this.resetGrid = this.resetGrid.bind(this);\n    this.changeCellSize = this.changeCellSize.bind(this);\n    this.changeBorderSize = this.changeBorderSize.bind(this);\n    this.saveGrid = this.saveGrid.bind(this);\n    this.downloadGrid = this.downloadGrid.bind(this);\n    this.importGrid = this.importGrid.bind(this);\n    this.loadGridFromDb = this.loadGridFromDb.bind(this);\n    this.importBrush = this.importBrush.bind(this);\n    this.loadBrushFromDb = this.loadBrushFromDb.bind(this);\n    this.onResize = this.onResize.bind(this);\n    this.handleMouseActions = this.handleMouseActions.bind(this);\n    this.handleZoom = this.handleZoom.bind(this);\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\n    this.switchShowGridlines = this.switchShowGridlines.bind(this);\n    this.switchShowLayer = this.switchShowLayer.bind(this);\n    this.handleCustomColorChange = this.handleCustomColorChange.bind(this);\n    this.handlePanningChange = this.handlePanningChange.bind(this);\n    this.handleCoordChange = this.handleCoordChange.bind(this);\n    this.updateCellContent = this.updateCellContent.bind(this);\n    this.removeCell = this.removeCell.bind(this);\n    this.updateDisplayCellContent = this.updateDisplayCellContent.bind(this);\n  }\n\n  changeColorTheme(value) {\n    let newColorTheme = { colorTheme: value };\n    this.setState(\n      {\n        ...newColorTheme,\n        modalStyle: config.getModalStyle(value),\n      },\n      () => {\n        config.save(newColorTheme);\n      }\n    );\n  }\n\n  changeBrush(layer, brush) {\n    this.setState({\n      currentLayer: layer,\n      currentBrush: brush,\n    });\n  }\n\n  resetGrid() {\n    const configToSave = { activeGrid: null };\n    this.setState(\n      {\n        grid: utils.createGrid(),\n        displayGrid: utils.createGrid(),\n        showLayers: utils.createShowLayers(),\n        gridSize: utils.getGridSize(),\n        shiftCoord: { x: 0, y: 0 },\n        activeGrid: { name: null, exportString: null },\n      },\n      () => {\n        config.save(configToSave);\n      }\n    );\n  }\n\n  changeCellSize(cellSize) {\n    let newCellSize = cellSize !== undefined ? cellSize : this.state.cellSize;\n    if (newCellSize < 2) newCellSize = 2;\n    let configToSave = { cellSize: newCellSize };\n    // If cell size is too big and there is no cell\n    // that can fit the grid\n    if (!utils.gridHasCells(newCellSize)) {\n      notif.clearAll();\n      return notif.cellSizeTooBig();\n    }\n    utils.initGridData(newCellSize);\n    let newState = {\n      cellSize: newCellSize,\n      gridSize: utils.getGridSize(),\n    };\n    this.setState(newState, () => {\n      config.save(configToSave);\n    });\n    return newCellSize;\n  }\n\n  changeBorderSize(borderSize) {\n    const newBorderSize =\n      borderSize !== undefined ? borderSize : this.state.borderSize;\n    let configToSave = { borderSize: newBorderSize };\n    let newState = {\n      borderSize: newBorderSize,\n    };\n    this.setState(newState, () => {\n      config.save(configToSave);\n    });\n  }\n\n  saveGrid(name) {\n    if (gridsHandler.loadUserGrid(name)) {\n      if (!window.confirm('This grid already exists. Overwrite it ?')) {\n        return;\n      }\n    }\n    let gridData = {\n      name,\n      grid: this.state.grid,\n      gridSize: this.state.gridSize,\n    };\n    gridsHandler.saveUserGrid(gridData);\n    const exportString = gridsHandler.loadUserGrid(name).exportString;\n    const configToSave = { activeGrid: { type: 'user', name } };\n    this.setState(\n      {\n        activeGrid: { type: 'user', name, exportString },\n      },\n      () => {\n        config.save(configToSave);\n      }\n    );\n  }\n\n  downloadGrid(format, filename) {\n    if (format === 'svg') {\n      FileSaver.saveAs(\n        new Blob([new XMLSerializer().serializeToString(this.svg)], {\n          type: 'image/svg+xml;charset=' + document.characterSet,\n        }),\n        filename\n      );\n    } else {\n      // Convert svg to canvas, then export to png\n      const svgString = utils.getSVGString(this.svg);\n      const width = this.svg.getAttribute('width');\n      const height = this.svg.getAttribute('height');\n      utils.svgString2Image(svgString, width, height, blob => {\n        FileSaver.saveAs(blob, filename);\n      });\n    }\n  }\n\n  importGrid(gridExportString) {\n    const gridData = gridsHandler.decodeGridExportString(gridExportString);\n    const isAlreadyExistingGrid = gridsHandler.doesImportGridAlreadyExist(\n      gridExportString\n    );\n    // If gridExportString is not a valid Base64 string\n    if (!gridData) {\n      return notif.wrongGridExportString();\n    }\n    // If same grid already exists in user grids\n    if (isAlreadyExistingGrid) {\n      return notif.gridAlreadyExists(isAlreadyExistingGrid);\n    }\n    gridsHandler.importUserGrid(gridData, gridExportString);\n    notif.gridSuccessfullyImported();\n    this.loadGridFromDb('user', gridData.name);\n  }\n\n  loadGrid(gridData, type) {\n    const gridSize = this.state.gridSize;\n    // If grid size is bigger than actual grid size,\n    // reduce cell size to make it fit\n    let cellSize = this.state.cellSize;\n    if (\n      gridSize[0] < gridData.gridSize[0] ||\n      gridSize[1] < gridData.gridSize[1]\n    ) {\n      const newCellValues = utils.adaptGridSizeToGridSize(\n        gridData.gridSize,\n        this.state.cellSize,\n        this.state.borderSize\n      );\n      // If grid is still too big even with minimal\n      // cell size, display notif\n      cellSize = this.changeCellSize(newCellValues);\n      notif.clearAll();\n      notif.cellSizeChanged();\n    }\n    // Translate all cells to have the grid centered on the screen\n    const min = utils.getMinCoords(gridData.grid);\n    const shiftCoord = {\n      x: -min.col * cellSize,\n      y: -min.row * cellSize,\n    };\n    const configToSave = { activeGrid: { type, name: gridData.name } };\n    this.setState(\n      {\n        activeGrid: {\n          type,\n          name: gridData.name,\n          exportString: gridData.exportString,\n        },\n        displayGrid: gridData.grid,\n        grid: gridData.grid,\n        shiftCoord,\n      },\n      () => {\n        config.save(configToSave);\n      }\n    );\n  }\n\n  loadGridFromDb(type, name) {\n    const gridData =\n      type === 'user' ? gridsHandler.loadUserGrid(name) : gridsLibrary[name];\n    this.loadGrid(gridData, type);\n  }\n\n  importBrush(brushExportString) {\n    const brushData = brushesHandler.decodeBrushExportString(brushExportString);\n    const isAlreadyExistingBrush = brushesHandler.doesImportBrushAlreadyExist(\n      brushExportString\n    );\n    // If brushExportString is not a valid Base64 string\n    if (!brushData) {\n      return notif.wrongBrushExportString();\n    }\n    // If same brush already exists in custom brushes\n    if (isAlreadyExistingBrush) {\n      return notif.brushAlreadyExists(isAlreadyExistingBrush);\n    }\n    brushesHandler.importCustomBrush(brushData, brushExportString);\n    notif.brushSuccessfullyImported();\n    this.loadBrushFromDb('custom', brushData.name);\n  }\n\n  loadBrush(brushData, type) {\n    const gridSize = this.state.gridSize;\n    // If brush size is bigger than actual grid size,\n    // reduce cell size size to make it fit\n    if (\n      gridSize[0] < brushData.brushSize[0] ||\n      gridSize[1] < brushData.brushSize[1]\n    ) {\n      const newCellAndBorderValues = utils.adaptGridSizeToBrushSize(\n        brushData.brushSize,\n        this.state.cellSize\n      );\n      // If brush is still too big even with minimal\n      // cell size, display notif\n      if (!newCellAndBorderValues) return notif.brushIsTooBig();\n      this.changeCellSize(newCellAndBorderValues);\n      notif.clearAll();\n      notif.cellSizeChanged();\n    }\n    this.setState(\n      {\n        activeGrid: {\n          name: brushData.name,\n          exportString: brushData.exportString,\n        },\n      },\n      this.generateCells\n    );\n  }\n\n  loadBrushFromDb(type, name) {\n    const brushData =\n      type === 'custom'\n        ? brushesHandler.loadCustomBrush(name)\n        : brushesLibrary[name];\n    this.loadBrush(brushData, type);\n  }\n\n  onResize() {\n    // Prevent displaying the resize Grid prompt if the user mobile\n    // virtual keyboard is showing up (which trigger a resize event)\n    if (\n      utils.getDeviceType() === 'mobile' &&\n      this.windowWidth === window.innerWidth\n    )\n      return;\n    this.windowWidth = window.innerWidth;\n    utils.initGridData(this.state.cellSize, true);\n    // Redraw the svg with the new size\n    this.changeCellSize(undefined);\n  }\n\n  handleMouseActions(event) {\n    // Prevent mouse events (mousedown & mousemove) to trigger immediatly after\n    // a 'touchstart' but allow mixed devices (mouse and touch) to use both type\n    // of inputs separately\n    if (event.type === 'touchstart') {\n      this.lastTouchedTime = new Date();\n    } else if (event.type === 'mousedown' || event.type === 'mousemove') {\n      if (this.lastTouchedTime) {\n        if (new Date() - this.lastTouchedTime < 750) {\n          return event.preventDefault();\n        }\n      }\n    }\n    const isTouchEvent =\n      event.type === 'touchstart' ||\n      event.type === 'touchmove' ||\n      event.type === 'touchend';\n    const isMouseEvent =\n      event.type === 'mousedown' ||\n      event.type === 'mousemove' ||\n      event.type === 'mouseup';\n    const svgWidth = Math.floor(this.svg.width / this.pixelRatio);\n    const svgHeight = Math.floor(this.svg.height / this.pixelRatio);\n    // [SAFARI BUG] event.buttons not recognized\n    // https://github.com/facebook/react/issues/7122\n    const buttonPressedCode =\n      event.type === 'mouseup'\n        ? event.button === 0\n          ? Mouse.LEFT_BUTTON\n          : Mouse.MIDDLE_BUTTON\n        : event.buttons !== undefined\n        ? event.buttons\n        : event.nativeEvent.which;\n    let x, y;\n    const { left, top } = this.svg.getBoundingClientRect();\n    if (isMouseEvent) {\n      x = event.pageX - left;\n      y = event.pageY - top;\n    } else if (isTouchEvent) {\n      x = event.touches[0].clientX - left;\n      y = event.touches[0].clientY - top;\n    }\n    // Prevent dragging overflowing out of the svg\n    if (x < 0 || x > svgWidth || y < 0 || y > svgHeight) {\n      return;\n    }\n    x -= this.state.shiftCoord.x;\n    y -= this.state.shiftCoord.y;\n\n    if (buttonPressedCode === Mouse.MIDDLE_BUTTON)\n      this.panning[event.type](event);\n    else\n      this.tools[this.state.currentLayer][event.type](\n        buttonPressedCode,\n        x,\n        y,\n        event\n      );\n  }\n\n  updateCellContent(col, row, content, callback) {\n    const { currentLayer, grid } = this.state;\n    const cellIndex = utils.findCellIndex(grid[currentLayer], col, row);\n    if (cellIndex === -1) {\n      const newCell = {\n        col,\n        row,\n        content,\n      };\n      this.setState(\n        prevState => {\n          return {\n            col,\n            row,\n            grid: {\n              ...grid,\n              [currentLayer]: [...grid[currentLayer], newCell],\n            },\n            displayGrid: {\n              ...grid,\n              [currentLayer]: [...grid[currentLayer], newCell],\n            },\n            activeGrid: {\n              ...prevState.activeGrid,\n              exportString: undefined,\n            },\n          };\n        },\n        () => {\n          if (callback) {\n            callback();\n          }\n        }\n      );\n    } else {\n      this.setState(\n        prevState => {\n          return {\n            col,\n            row,\n            grid: {\n              ...grid,\n              [currentLayer]: [\n                ...grid[currentLayer].slice(0, cellIndex),\n                {\n                  ...grid[currentLayer][cellIndex],\n                  content: {\n                    ...grid[currentLayer][cellIndex].content,\n                    ...content,\n                  },\n                },\n                ...grid[currentLayer].slice(cellIndex + 1),\n              ],\n            },\n            displayGrid: {\n              ...grid,\n              [currentLayer]: [\n                ...grid[currentLayer].slice(0, cellIndex),\n                {\n                  ...grid[currentLayer][cellIndex],\n                  content: {\n                    ...grid[currentLayer][cellIndex].content,\n                    ...content,\n                  },\n                },\n                ...grid[currentLayer].slice(cellIndex + 1),\n              ],\n            },\n            activeGrid: {\n              ...prevState.activeGrid,\n              exportString: undefined,\n            },\n          };\n        },\n        () => {\n          if (callback) {\n            callback();\n          }\n        }\n      );\n    }\n  }\n\n  removeCell(col, row, callback) {\n    const { currentLayer, grid } = this.state;\n    const cellIndex = utils.findCellIndex(grid[currentLayer], col, row);\n    if (cellIndex === -1) {\n      return;\n    } else {\n      this.setState(\n        prevState => {\n          return {\n            col,\n            row,\n            grid: {\n              ...grid,\n              [currentLayer]: [\n                ...grid[currentLayer].slice(0, cellIndex),\n                ...grid[currentLayer].slice(cellIndex + 1),\n              ],\n            },\n            displayGrid: {\n              ...grid,\n              [currentLayer]: [\n                ...grid[currentLayer].slice(0, cellIndex),\n                ...grid[currentLayer].slice(cellIndex + 1),\n              ],\n            },\n            activeGrid: {\n              ...prevState.activeGrid,\n              exportString: undefined,\n            },\n          };\n        },\n        () => {\n          if (callback) {\n            callback();\n          }\n        }\n      );\n    }\n  }\n\n  updateDisplayCellContent(col, row, content) {\n    const { currentLayer, grid } = this.state;\n    const cellIndex = utils.findCellIndex(grid[currentLayer], col, row);\n    if (cellIndex === -1) {\n      const newCell = {\n        col,\n        row,\n        content,\n      };\n      this.setState({\n        col,\n        row,\n        displayGrid: {\n          ...grid,\n          [currentLayer]: [...grid[currentLayer], newCell],\n        },\n      });\n    } else {\n      this.setState(prevState => ({\n        col,\n        row,\n        displayGrid: {\n          ...grid,\n          [currentLayer]: [\n            ...grid[currentLayer].slice(0, cellIndex),\n            {\n              ...grid[currentLayer][cellIndex],\n              content,\n            },\n            ...grid[currentLayer].slice(cellIndex + 1),\n          ],\n        },\n      }));\n    }\n  }\n\n  handleZoom(event) {\n    const sign = event.deltaY > 0 ? -1 : 1;\n    const delta = sign * 0.07 * this.state.cellSize;\n    const newCellSize = this.state.cellSize + delta;\n    if (event.deltaY < 0) {\n      const shiftCoord = {\n        x:\n          this.state.shiftCoord.x - 0.1 * (event.pageX - window.innerWidth / 2),\n        y:\n          this.state.shiftCoord.y -\n          0.1 * (event.pageY - window.innerHeight / 2),\n      };\n      this.setState(\n        {\n          shiftCoord,\n        },\n        () => {}\n      );\n      this.changeCellSize(newCellSize);\n    } else {\n      this.changeCellSize(newCellSize);\n    }\n  }\n\n  handleMouseLeave() {\n    const { currentLayer, grid } = this.state;\n    this.setState({\n      displayGrid: {\n        ...grid,\n        [currentLayer]: [...grid[currentLayer]],\n      },\n    });\n  }\n\n  switchShowGridlines() {\n    let value;\n    this.setState(\n      prevState => {\n        value = { showGridlines: !prevState.showGridlines };\n        return value;\n      },\n      () => {\n        config.save(value);\n      }\n    );\n  }\n\n  switchShowLayer(layerName) {\n    this.setState(prevState => ({\n      showLayers: {\n        ...prevState.showLayers,\n        [layerName]: !prevState.showLayers[layerName],\n      },\n    }));\n  }\n\n  handleCustomColorChange(color) {\n    let value;\n    this.setState(\n      prevState => {\n        return (value = { customColor: color.rgb });\n      },\n      () => {\n        config.save(value);\n      }\n    );\n  }\n\n  handlePanningChange(isPanning, shiftCoord) {\n    this.setState({\n      isPanning,\n      shiftCoord,\n    });\n  }\n\n  handleCoordChange(coord) {\n    this.setState({\n      col: coord.col,\n      row: coord.row,\n    });\n  }\n\n  componentWillMount() {\n    this.setState({\n      grid: utils.createGrid(),\n      displayGrid: utils.createGrid(),\n      showLayers: utils.createShowLayers(),\n      //TODO move to config?\n      currentBrush: 'g1',\n      currentLayer: 'lgrid',\n    });\n  }\n\n  componentDidMount() {\n    notif.init(this.refs.notificationSystem);\n    this.windowWidth = window.innerWidth;\n    window.addEventListener('resize', this.onResize, { passive: true });\n    // Get grids library & set it in memory\n    fetch(new Request('gridsLibrary.json'))\n      .then(response => response.json())\n      .then(response => {\n        let gridsLibraryNames = Object.keys(response);\n        gridsLibraryNames.unshift('Load a grid');\n        gridsLibrary = response;\n        this.setState({ gridsLibraryNames }, () => {\n          // Restore active grid\n          if (configData.activeGrid !== null)\n            this.loadGridFromDb(\n              configData.activeGrid.type,\n              configData.activeGrid.name\n            );\n        });\n      });\n  }\n\n  render() {\n    const wrapperWidth = utils.getWrapperWidth();\n    const wrapperHeight = utils.getWrapperHeight();\n    const svgStyle =\n      this.pixelRatio > 1\n        ? { width: `${wrapperWidth}px`, height: `${wrapperHeight}px` }\n        : {};\n    const gridPathData = `M ${this.state.cellSize} 0 L 0 0 0 ${\n      this.state.cellSize\n    }`;\n    return (\n      <div\n        className=\"main-wrapper\"\n        style={{\n          backgroundColor: colorThemes[this.state.colorTheme].background,\n        }}\n      >\n        <script>\n          var cell = document.querySelector(\"button\"); document.getElementById()\n          (baseElement.querySelector(\"div span\").innerHTML);\n        </script>\n        <div id=\"tooltip\" className=\"tooltip\">\n          <span className=\"tooltip-text\">Tooltip text</span>\n        </div>\n        <svg\n          id=\"grid\"\n          className={`${this.state.isPanning ? 'panning' : ''}`}\n          version=\"1.1\"\n          baseProfile=\"full\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width={wrapperWidth * this.pixelRatio}\n          height={wrapperHeight * this.pixelRatio}\n          style={svgStyle}\n          ref={svg => (this.svg = svg)}\n          onMouseMove={this.handleMouseActions}\n          onMouseDown={this.handleMouseActions}\n          onMouseUp={this.handleMouseActions}\n          onMouseLeave={this.handleMouseLeave}\n          onTouchStart={this.handleMouseActions}\n          onTouchMove={this.handleMouseActions}\n          onTouchEnd={this.handleMouseActions}\n          onWheel={this.handleZoom}\n        >\n          <defs>\n            <pattern\n              x={this.state.shiftCoord.x}\n              y={this.state.shiftCoord.y}\n              id=\"grid-pattern\"\n              width={this.state.cellSize}\n              height={this.state.cellSize}\n              patternUnits=\"userSpaceOnUse\"\n            >\n              <path\n                d={gridPathData}\n                fill=\"none\"\n                stroke=\"white\"\n                strokeWidth={this.state.borderSize}\n              />\n            </pattern>\n          </defs>\n          {Object.keys(this.state.grid).map(layerName => {\n            return configData.layers[layerName].map(toolName => {\n              if (configData.symbols[toolName] !== undefined)\n                return configData.symbols[toolName](this.state.customColor);\n              return null;\n            });\n          })}\n\n          {this.state.showGridlines ? (\n            <rect width=\"100%\" height=\"100%\" fill=\"url(#grid-pattern)\" />\n          ) : null}\n          {Object.keys(this.state.displayGrid).map(layerName => {\n            if (!this.state.showLayers[layerName]) return null;\n            return (\n              <Layer\n                key={layerName}\n                name={layerName}\n                cellSize={this.state.cellSize}\n                cells={this.state.displayGrid[layerName]}\n                shiftCoord={this.state.shiftCoord}\n              />\n            );\n          })}\n        </svg>\n        <Controls\n          resetGrid={this.resetGrid}\n          showGridlines={this.state.showGridlines}\n          customColor={this.state.customColor}\n          switchShowGridlines={this.switchShowGridlines}\n          switchShowLayer={this.switchShowLayer}\n          randomSeed={this.state.randomSeed}\n          changeTimeCompression={this.changeTimeCompression}\n          cellSize={this.state.cellSize}\n          borderSize={this.state.borderSize}\n          changeCellSize={this.changeCellSize}\n          changeBorderSize={this.changeBorderSize}\n          loadBrushFromDb={this.loadBrushFromDb}\n          saveGrid={this.saveGrid}\n          importGrid={this.importGrid}\n          downloadGrid={this.downloadGrid}\n          loadGridFromDb={this.loadGridFromDb}\n          importBrush={this.importBrush}\n          activeGrid={this.state.activeGrid}\n          gridsLibraryNames={this.state.gridsLibraryNames}\n          colorTheme={this.state.colorTheme}\n          changeColorTheme={this.changeColorTheme}\n          modalStyle={this.state.modalStyle}\n          changeBrush={this.changeBrush}\n          col={this.state.col}\n          row={this.state.row}\n          currentLayer={this.state.currentLayer}\n          currentBrush={this.state.currentBrush}\n          showLayers={this.state.showLayers}\n          handleCustomColorChange={this.handleCustomColorChange}\n        />\n        <Footer\n          colorTheme={this.state.colorTheme}\n          modalStyle={this.state.modalStyle}\n        />\n        <Panning\n          ref={panning => (this.panning = panning)}\n          isPanning={this.state.isPanning}\n          shiftCoord={this.state.shiftCoord}\n          onChange={this.handlePanningChange}\n        />\n        <PatchTool\n          ref={tool => (this.tools['lgrid'] = tool)}\n          cellSize={this.state.cellSize}\n          currentBrush={this.state.currentBrush}\n          updateCellContent={this.updateCellContent}\n          updateDisplayCellContent={this.updateDisplayCellContent}\n        />\n        <PatchTool\n          ref={tool => (this.tools['lfloor'] = tool)}\n          cellSize={this.state.cellSize}\n          currentBrush={this.state.currentBrush}\n          updateCellContent={this.updateCellContent}\n          updateDisplayCellContent={this.updateDisplayCellContent}\n        />\n        <PatchTool\n          ref={tool => (this.tools['lfloorm'] = tool)}\n          cellSize={this.state.cellSize}\n          currentBrush={this.state.currentBrush}\n          updateCellContent={this.updateCellContent}\n          updateDisplayCellContent={this.updateDisplayCellContent}\n        />\n        <BackstitchTool\n          ref={tool => (this.tools['lwallv'] = tool)}\n          cellSize={this.state.cellSize}\n          currentBrush={this.state.currentBrush}\n          onCoordChange={this.handleCoordChange}\n          updateCellContent={this.updateCellContent}\n        />\n        <BackstitchTool\n          ref={tool => (this.tools['lwallvm'] = tool)}\n          cellSize={this.state.cellSize}\n          currentBrush={this.state.currentBrush}\n          onCoordChange={this.handleCoordChange}\n          updateCellContent={this.updateCellContent}\n        />\n        <TextTool\n          ref={tool => (this.tools['lnotes'] = tool)}\n          cellSize={this.state.cellSize}\n          currentBrush={this.state.currentBrush}\n          layer={this.state.grid.lnotes}\n          shiftCoord={this.state.shiftCoord}\n          onCoordChange={this.handleCoordChange}\n          removeCell={this.removeCell}\n          updateCellContent={this.updateCellContent}\n          modalStyle={this.state.modalStyle}\n        />\n        <NotificationSystem ref=\"notificationSystem\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('app'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}